
*********************************预测分析表******************************
M[＜程序＞][;] = 
M[＜程序＞][(] = 
M[＜程序＞][)] = 
M[＜程序＞][{] = 
M[＜程序＞][}] = 
M[＜程序＞][+] = 
M[＜程序＞][-] = 
M[＜程序＞][*] = 
M[＜程序＞][/] = 
M[＜程序＞][<] = 
M[＜程序＞][<=] = 
M[＜程序＞][>] = 
M[＜程序＞][>=] = 
M[＜程序＞][!=] = 
M[＜程序＞][==] = 
M[＜程序＞][digit] = 
M[＜程序＞][character] = 
M[＜程序＞][string] = 
M[＜程序＞][id] = 
M[＜程序＞][int] = ＜程序＞->＜1＞＜26＞＜主函数＞
M[＜程序＞][char] = ＜程序＞->＜1＞＜26＞＜主函数＞
M[＜程序＞][const] = ＜程序＞->＜1＞＜26＞＜主函数＞
M[＜程序＞][=] = 
M[＜程序＞][,] = 
M[＜程序＞][[] = 
M[＜程序＞][]] = 
M[＜程序＞][void] = ＜程序＞->＜1＞＜26＞＜主函数＞
M[＜程序＞][main] = 
M[＜程序＞][if] = 
M[＜程序＞][else] = 
M[＜程序＞][while] = 
M[＜程序＞][do] = 
M[＜程序＞][for] = 
M[＜程序＞][scanf] = 
M[＜程序＞][printf] = 
M[＜程序＞][return] = 


M[＜1＞][;] = ＜1＞->$
M[＜1＞][(] = 
M[＜1＞][)] = 
M[＜1＞][{] = ＜1＞->$
M[＜1＞][}] = ＜1＞->$
M[＜1＞][+] = 
M[＜1＞][-] = 
M[＜1＞][*] = 
M[＜1＞][/] = 
M[＜1＞][<] = 
M[＜1＞][<=] = 
M[＜1＞][>] = 
M[＜1＞][>=] = 
M[＜1＞][!=] = 
M[＜1＞][==] = 
M[＜1＞][digit] = 
M[＜1＞][character] = 
M[＜1＞][string] = 
M[＜1＞][id] = ＜1＞->$
M[＜1＞][int] = ＜1＞->$
M[＜1＞][char] = ＜1＞->$
M[＜1＞][const] = ＜1＞->＜常量说明＞＜1＞
M[＜1＞][=] = 
M[＜1＞][,] = 
M[＜1＞][[] = 
M[＜1＞][]] = 
M[＜1＞][void] = ＜1＞->$
M[＜1＞][main] = 
M[＜1＞][if] = ＜1＞->$
M[＜1＞][else] = 
M[＜1＞][while] = ＜1＞->$
M[＜1＞][do] = ＜1＞->$
M[＜1＞][for] = ＜1＞->$
M[＜1＞][scanf] = ＜1＞->$
M[＜1＞][printf] = ＜1＞->$
M[＜1＞][return] = ＜1＞->$


M[＜26＞][;] = 
M[＜26＞][(] = 
M[＜26＞][)] = 
M[＜26＞][{] = 
M[＜26＞][}] = 
M[＜26＞][+] = 
M[＜26＞][-] = 
M[＜26＞][*] = 
M[＜26＞][/] = 
M[＜26＞][<] = 
M[＜26＞][<=] = 
M[＜26＞][>] = 
M[＜26＞][>=] = 
M[＜26＞][!=] = 
M[＜26＞][==] = 
M[＜26＞][digit] = 
M[＜26＞][character] = 
M[＜26＞][string] = 
M[＜26＞][id] = 
M[＜26＞][int] = ＜26＞->＜27＞＜26＞
M[＜26＞][char] = ＜26＞->＜27＞＜26＞
M[＜26＞][const] = 
M[＜26＞][=] = 
M[＜26＞][,] = 
M[＜26＞][[] = 
M[＜26＞][]] = 
M[＜26＞][void] = ＜26＞->$
M[＜26＞][main] = 
M[＜26＞][if] = 
M[＜26＞][else] = 
M[＜26＞][while] = 
M[＜26＞][do] = 
M[＜26＞][for] = 
M[＜26＞][scanf] = 
M[＜26＞][printf] = 
M[＜26＞][return] = 


M[＜主函数＞][;] = 
M[＜主函数＞][(] = 
M[＜主函数＞][)] = 
M[＜主函数＞][{] = 
M[＜主函数＞][}] = 
M[＜主函数＞][+] = 
M[＜主函数＞][-] = 
M[＜主函数＞][*] = 
M[＜主函数＞][/] = 
M[＜主函数＞][<] = 
M[＜主函数＞][<=] = 
M[＜主函数＞][>] = 
M[＜主函数＞][>=] = 
M[＜主函数＞][!=] = 
M[＜主函数＞][==] = 
M[＜主函数＞][digit] = 
M[＜主函数＞][character] = 
M[＜主函数＞][string] = 
M[＜主函数＞][id] = 
M[＜主函数＞][int] = 
M[＜主函数＞][char] = 
M[＜主函数＞][const] = 
M[＜主函数＞][=] = 
M[＜主函数＞][,] = 
M[＜主函数＞][[] = 
M[＜主函数＞][]] = 
M[＜主函数＞][void] = ＜主函数＞->voidmain(){＜复合语句＞}
M[＜主函数＞][main] = 
M[＜主函数＞][if] = 
M[＜主函数＞][else] = 
M[＜主函数＞][while] = 
M[＜主函数＞][do] = 
M[＜主函数＞][for] = 
M[＜主函数＞][scanf] = 
M[＜主函数＞][printf] = 
M[＜主函数＞][return] = 


M[＜27＞][;] = 
M[＜27＞][(] = 
M[＜27＞][)] = 
M[＜27＞][{] = 
M[＜27＞][}] = 
M[＜27＞][+] = 
M[＜27＞][-] = 
M[＜27＞][*] = 
M[＜27＞][/] = 
M[＜27＞][<] = 
M[＜27＞][<=] = 
M[＜27＞][>] = 
M[＜27＞][>=] = 
M[＜27＞][!=] = 
M[＜27＞][==] = 
M[＜27＞][digit] = 
M[＜27＞][character] = 
M[＜27＞][string] = 
M[＜27＞][id] = 
M[＜27＞][int] = ＜27＞->＜29＞＜28＞
M[＜27＞][char] = ＜27＞->＜29＞＜28＞
M[＜27＞][const] = 
M[＜27＞][=] = 
M[＜27＞][,] = 
M[＜27＞][[] = 
M[＜27＞][]] = 
M[＜27＞][void] = ＜27＞->＜无返回值函数定义＞
M[＜27＞][main] = 
M[＜27＞][if] = 
M[＜27＞][else] = 
M[＜27＞][while] = 
M[＜27＞][do] = 
M[＜27＞][for] = 
M[＜27＞][scanf] = 
M[＜27＞][printf] = 
M[＜27＞][return] = 


M[＜29＞][;] = 
M[＜29＞][(] = 
M[＜29＞][)] = 
M[＜29＞][{] = 
M[＜29＞][}] = 
M[＜29＞][+] = 
M[＜29＞][-] = 
M[＜29＞][*] = 
M[＜29＞][/] = 
M[＜29＞][<] = 
M[＜29＞][<=] = 
M[＜29＞][>] = 
M[＜29＞][>=] = 
M[＜29＞][!=] = 
M[＜29＞][==] = 
M[＜29＞][digit] = 
M[＜29＞][character] = 
M[＜29＞][string] = 
M[＜29＞][id] = 
M[＜29＞][int] = ＜29＞->＜10＞
M[＜29＞][char] = ＜29＞->＜11＞
M[＜29＞][const] = 
M[＜29＞][=] = 
M[＜29＞][,] = 
M[＜29＞][[] = 
M[＜29＞][]] = 
M[＜29＞][void] = 
M[＜29＞][main] = 
M[＜29＞][if] = 
M[＜29＞][else] = 
M[＜29＞][while] = 
M[＜29＞][do] = 
M[＜29＞][for] = 
M[＜29＞][scanf] = 
M[＜29＞][printf] = 
M[＜29＞][return] = 


M[＜28＞][;] = ＜28＞->;
M[＜28＞][(] = ＜28＞->(＜参数表＞){＜复合语句＞}
M[＜28＞][)] = 
M[＜28＞][{] = 
M[＜28＞][}] = 
M[＜28＞][+] = 
M[＜28＞][-] = 
M[＜28＞][*] = 
M[＜28＞][/] = 
M[＜28＞][<] = 
M[＜28＞][<=] = 
M[＜28＞][>] = 
M[＜28＞][>=] = 
M[＜28＞][!=] = 
M[＜28＞][==] = 
M[＜28＞][digit] = 
M[＜28＞][character] = 
M[＜28＞][string] = 
M[＜28＞][id] = 
M[＜28＞][int] = 
M[＜28＞][char] = 
M[＜28＞][const] = 
M[＜28＞][=] = 
M[＜28＞][,] = ＜28＞->＜14＞;
M[＜28＞][[] = 
M[＜28＞][]] = 
M[＜28＞][void] = 
M[＜28＞][main] = 
M[＜28＞][if] = 
M[＜28＞][else] = 
M[＜28＞][while] = 
M[＜28＞][do] = 
M[＜28＞][for] = 
M[＜28＞][scanf] = 
M[＜28＞][printf] = 
M[＜28＞][return] = 


M[＜无返回值函数定义＞][;] = 
M[＜无返回值函数定义＞][(] = 
M[＜无返回值函数定义＞][)] = 
M[＜无返回值函数定义＞][{] = 
M[＜无返回值函数定义＞][}] = 
M[＜无返回值函数定义＞][+] = 
M[＜无返回值函数定义＞][-] = 
M[＜无返回值函数定义＞][*] = 
M[＜无返回值函数定义＞][/] = 
M[＜无返回值函数定义＞][<] = 
M[＜无返回值函数定义＞][<=] = 
M[＜无返回值函数定义＞][>] = 
M[＜无返回值函数定义＞][>=] = 
M[＜无返回值函数定义＞][!=] = 
M[＜无返回值函数定义＞][==] = 
M[＜无返回值函数定义＞][digit] = 
M[＜无返回值函数定义＞][character] = 
M[＜无返回值函数定义＞][string] = 
M[＜无返回值函数定义＞][id] = 
M[＜无返回值函数定义＞][int] = 
M[＜无返回值函数定义＞][char] = 
M[＜无返回值函数定义＞][const] = 
M[＜无返回值函数定义＞][=] = 
M[＜无返回值函数定义＞][,] = 
M[＜无返回值函数定义＞][[] = 
M[＜无返回值函数定义＞][]] = 
M[＜无返回值函数定义＞][void] = ＜无返回值函数定义＞->void＜标识符＞(＜参数表＞){＜复合语句＞}
M[＜无返回值函数定义＞][main] = 
M[＜无返回值函数定义＞][if] = 
M[＜无返回值函数定义＞][else] = 
M[＜无返回值函数定义＞][while] = 
M[＜无返回值函数定义＞][do] = 
M[＜无返回值函数定义＞][for] = 
M[＜无返回值函数定义＞][scanf] = 
M[＜无返回值函数定义＞][printf] = 
M[＜无返回值函数定义＞][return] = 


M[＜14＞][;] = 
M[＜14＞][(] = 
M[＜14＞][)] = 
M[＜14＞][{] = 
M[＜14＞][}] = 
M[＜14＞][+] = 
M[＜14＞][-] = 
M[＜14＞][*] = 
M[＜14＞][/] = 
M[＜14＞][<] = 
M[＜14＞][<=] = 
M[＜14＞][>] = 
M[＜14＞][>=] = 
M[＜14＞][!=] = 
M[＜14＞][==] = 
M[＜14＞][digit] = 
M[＜14＞][character] = 
M[＜14＞][string] = 
M[＜14＞][id] = 
M[＜14＞][int] = 
M[＜14＞][char] = 
M[＜14＞][const] = 
M[＜14＞][=] = 
M[＜14＞][,] = ＜14＞->,＜13＞
M[＜14＞][[] = 
M[＜14＞][]] = 
M[＜14＞][void] = 
M[＜14＞][main] = 
M[＜14＞][if] = 
M[＜14＞][else] = 
M[＜14＞][while] = 
M[＜14＞][do] = 
M[＜14＞][for] = 
M[＜14＞][scanf] = 
M[＜14＞][printf] = 
M[＜14＞][return] = 


M[＜参数表＞][;] = 
M[＜参数表＞][(] = 
M[＜参数表＞][)] = ＜参数表＞->$
M[＜参数表＞][{] = 
M[＜参数表＞][}] = 
M[＜参数表＞][+] = 
M[＜参数表＞][-] = 
M[＜参数表＞][*] = 
M[＜参数表＞][/] = 
M[＜参数表＞][<] = 
M[＜参数表＞][<=] = 
M[＜参数表＞][>] = 
M[＜参数表＞][>=] = 
M[＜参数表＞][!=] = 
M[＜参数表＞][==] = 
M[＜参数表＞][digit] = 
M[＜参数表＞][character] = 
M[＜参数表＞][string] = 
M[＜参数表＞][id] = 
M[＜参数表＞][int] = ＜参数表＞->＜类型标识符＞＜标识符＞＜15＞
M[＜参数表＞][char] = ＜参数表＞->＜类型标识符＞＜标识符＞＜15＞
M[＜参数表＞][const] = 
M[＜参数表＞][=] = 
M[＜参数表＞][,] = 
M[＜参数表＞][[] = 
M[＜参数表＞][]] = 
M[＜参数表＞][void] = 
M[＜参数表＞][main] = 
M[＜参数表＞][if] = 
M[＜参数表＞][else] = 
M[＜参数表＞][while] = 
M[＜参数表＞][do] = 
M[＜参数表＞][for] = 
M[＜参数表＞][scanf] = 
M[＜参数表＞][printf] = 
M[＜参数表＞][return] = 


M[＜复合语句＞][;] = ＜复合语句＞->＜1＞＜4＞＜语句列＞
M[＜复合语句＞][(] = 
M[＜复合语句＞][)] = 
M[＜复合语句＞][{] = ＜复合语句＞->＜1＞＜4＞＜语句列＞
M[＜复合语句＞][}] = ＜复合语句＞->＜1＞＜4＞＜语句列＞
M[＜复合语句＞][+] = 
M[＜复合语句＞][-] = 
M[＜复合语句＞][*] = 
M[＜复合语句＞][/] = 
M[＜复合语句＞][<] = 
M[＜复合语句＞][<=] = 
M[＜复合语句＞][>] = 
M[＜复合语句＞][>=] = 
M[＜复合语句＞][!=] = 
M[＜复合语句＞][==] = 
M[＜复合语句＞][digit] = 
M[＜复合语句＞][character] = 
M[＜复合语句＞][string] = 
M[＜复合语句＞][id] = ＜复合语句＞->＜1＞＜4＞＜语句列＞
M[＜复合语句＞][int] = ＜复合语句＞->＜1＞＜4＞＜语句列＞
M[＜复合语句＞][char] = ＜复合语句＞->＜1＞＜4＞＜语句列＞
M[＜复合语句＞][const] = ＜复合语句＞->＜1＞＜4＞＜语句列＞
M[＜复合语句＞][=] = 
M[＜复合语句＞][,] = 
M[＜复合语句＞][[] = 
M[＜复合语句＞][]] = 
M[＜复合语句＞][void] = 
M[＜复合语句＞][main] = 
M[＜复合语句＞][if] = ＜复合语句＞->＜1＞＜4＞＜语句列＞
M[＜复合语句＞][else] = 
M[＜复合语句＞][while] = ＜复合语句＞->＜1＞＜4＞＜语句列＞
M[＜复合语句＞][do] = ＜复合语句＞->＜1＞＜4＞＜语句列＞
M[＜复合语句＞][for] = ＜复合语句＞->＜1＞＜4＞＜语句列＞
M[＜复合语句＞][scanf] = ＜复合语句＞->＜1＞＜4＞＜语句列＞
M[＜复合语句＞][printf] = ＜复合语句＞->＜1＞＜4＞＜语句列＞
M[＜复合语句＞][return] = ＜复合语句＞->＜1＞＜4＞＜语句列＞


M[//][;] = 
M[//][(] = 
M[//][)] = 
M[//][{] = 
M[//][}] = 
M[//][+] = 
M[//][-] = 
M[//][*] = 
M[//][/] = 
M[//][<] = 
M[//][<=] = 
M[//][>] = 
M[//][>=] = 
M[//][!=] = 
M[//][==] = 
M[//][digit] = 
M[//][character] = 
M[//][string] = 
M[//][id] = 
M[//][int] = 
M[//][char] = 
M[//][const] = 
M[//][=] = 
M[//][,] = 
M[//][[] = 
M[//][]] = 
M[//][void] = //＜24＞＜无返回值函数定义＞
M[//][main] = 
M[//][if] = 
M[//][else] = 
M[//][while] = 
M[//][do] = 
M[//][for] = 
M[//][scanf] = 
M[//][printf] = 
M[//][return] = 


M[＜25＞][;] = 
M[＜25＞][(] = 
M[＜25＞][)] = 
M[＜25＞][{] = 
M[＜25＞][}] = 
M[＜25＞][+] = 
M[＜25＞][-] = 
M[＜25＞][*] = 
M[＜25＞][/] = 
M[＜25＞][<] = 
M[＜25＞][<=] = 
M[＜25＞][>] = 
M[＜25＞][>=] = 
M[＜25＞][!=] = 
M[＜25＞][==] = 
M[＜25＞][digit] = 
M[＜25＞][character] = 
M[＜25＞][string] = 
M[＜25＞][id] = 
M[＜25＞][int] = 
M[＜25＞][char] = 
M[＜25＞][const] = 
M[＜25＞][=] = 
M[＜25＞][,] = 
M[＜25＞][[] = 
M[＜25＞][]] = 
M[＜25＞][void] = 
M[＜25＞][main] = 
M[＜25＞][if] = 
M[＜25＞][else] = 
M[＜25＞][while] = 
M[＜25＞][do] = 
M[＜25＞][for] = 
M[＜25＞][scanf] = 
M[＜25＞][printf] = 
M[＜25＞][return] = 


M[＜24＞][;] = 
M[＜24＞][(] = 
M[＜24＞][)] = 
M[＜24＞][{] = 
M[＜24＞][}] = 
M[＜24＞][+] = 
M[＜24＞][-] = 
M[＜24＞][*] = 
M[＜24＞][/] = 
M[＜24＞][<] = 
M[＜24＞][<=] = 
M[＜24＞][>] = 
M[＜24＞][>=] = 
M[＜24＞][!=] = 
M[＜24＞][==] = 
M[＜24＞][digit] = 
M[＜24＞][character] = 
M[＜24＞][string] = 
M[＜24＞][id] = 
M[＜24＞][int] = 
M[＜24＞][char] = 
M[＜24＞][const] = 
M[＜24＞][=] = 
M[＜24＞][,] = 
M[＜24＞][[] = 
M[＜24＞][]] = 
M[＜24＞][void] = 
M[＜24＞][main] = 
M[＜24＞][if] = 
M[＜24＞][else] = 
M[＜24＞][while] = 
M[＜24＞][do] = 
M[＜24＞][for] = 
M[＜24＞][scanf] = 
M[＜24＞][printf] = 
M[＜24＞][return] = 


M[＜有返回值函数定义＞][;] = 
M[＜有返回值函数定义＞][(] = 
M[＜有返回值函数定义＞][)] = 
M[＜有返回值函数定义＞][{] = 
M[＜有返回值函数定义＞][}] = 
M[＜有返回值函数定义＞][+] = 
M[＜有返回值函数定义＞][-] = 
M[＜有返回值函数定义＞][*] = 
M[＜有返回值函数定义＞][/] = 
M[＜有返回值函数定义＞][<] = 
M[＜有返回值函数定义＞][<=] = 
M[＜有返回值函数定义＞][>] = 
M[＜有返回值函数定义＞][>=] = 
M[＜有返回值函数定义＞][!=] = 
M[＜有返回值函数定义＞][==] = 
M[＜有返回值函数定义＞][digit] = 
M[＜有返回值函数定义＞][character] = 
M[＜有返回值函数定义＞][string] = 
M[＜有返回值函数定义＞][id] = 
M[＜有返回值函数定义＞][int] = 
M[＜有返回值函数定义＞][char] = 
M[＜有返回值函数定义＞][const] = 
M[＜有返回值函数定义＞][=] = 
M[＜有返回值函数定义＞][,] = 
M[＜有返回值函数定义＞][[] = 
M[＜有返回值函数定义＞][]] = 
M[＜有返回值函数定义＞][void] = 
M[＜有返回值函数定义＞][main] = 
M[＜有返回值函数定义＞][if] = 
M[＜有返回值函数定义＞][else] = 
M[＜有返回值函数定义＞][while] = 
M[＜有返回值函数定义＞][do] = 
M[＜有返回值函数定义＞][for] = 
M[＜有返回值函数定义＞][scanf] = 
M[＜有返回值函数定义＞][printf] = 
M[＜有返回值函数定义＞][return] = 


M[＜加法运算符＞][;] = 
M[＜加法运算符＞][(] = 
M[＜加法运算符＞][)] = 
M[＜加法运算符＞][{] = 
M[＜加法运算符＞][}] = 
M[＜加法运算符＞][+] = ＜加法运算符＞->+
M[＜加法运算符＞][-] = ＜加法运算符＞->-
M[＜加法运算符＞][*] = 
M[＜加法运算符＞][/] = 
M[＜加法运算符＞][<] = 
M[＜加法运算符＞][<=] = 
M[＜加法运算符＞][>] = 
M[＜加法运算符＞][>=] = 
M[＜加法运算符＞][!=] = 
M[＜加法运算符＞][==] = 
M[＜加法运算符＞][digit] = 
M[＜加法运算符＞][character] = 
M[＜加法运算符＞][string] = 
M[＜加法运算符＞][id] = 
M[＜加法运算符＞][int] = 
M[＜加法运算符＞][char] = 
M[＜加法运算符＞][const] = 
M[＜加法运算符＞][=] = 
M[＜加法运算符＞][,] = 
M[＜加法运算符＞][[] = 
M[＜加法运算符＞][]] = 
M[＜加法运算符＞][void] = 
M[＜加法运算符＞][main] = 
M[＜加法运算符＞][if] = 
M[＜加法运算符＞][else] = 
M[＜加法运算符＞][while] = 
M[＜加法运算符＞][do] = 
M[＜加法运算符＞][for] = 
M[＜加法运算符＞][scanf] = 
M[＜加法运算符＞][printf] = 
M[＜加法运算符＞][return] = 


M[＜乘法运算符＞][;] = 
M[＜乘法运算符＞][(] = 
M[＜乘法运算符＞][)] = 
M[＜乘法运算符＞][{] = 
M[＜乘法运算符＞][}] = 
M[＜乘法运算符＞][+] = 
M[＜乘法运算符＞][-] = 
M[＜乘法运算符＞][*] = ＜乘法运算符＞->*
M[＜乘法运算符＞][/] = ＜乘法运算符＞->/
M[＜乘法运算符＞][<] = 
M[＜乘法运算符＞][<=] = 
M[＜乘法运算符＞][>] = 
M[＜乘法运算符＞][>=] = 
M[＜乘法运算符＞][!=] = 
M[＜乘法运算符＞][==] = 
M[＜乘法运算符＞][digit] = 
M[＜乘法运算符＞][character] = 
M[＜乘法运算符＞][string] = 
M[＜乘法运算符＞][id] = 
M[＜乘法运算符＞][int] = 
M[＜乘法运算符＞][char] = 
M[＜乘法运算符＞][const] = 
M[＜乘法运算符＞][=] = 
M[＜乘法运算符＞][,] = 
M[＜乘法运算符＞][[] = 
M[＜乘法运算符＞][]] = 
M[＜乘法运算符＞][void] = 
M[＜乘法运算符＞][main] = 
M[＜乘法运算符＞][if] = 
M[＜乘法运算符＞][else] = 
M[＜乘法运算符＞][while] = 
M[＜乘法运算符＞][do] = 
M[＜乘法运算符＞][for] = 
M[＜乘法运算符＞][scanf] = 
M[＜乘法运算符＞][printf] = 
M[＜乘法运算符＞][return] = 


M[＜关系运算符＞][;] = 
M[＜关系运算符＞][(] = 
M[＜关系运算符＞][)] = 
M[＜关系运算符＞][{] = 
M[＜关系运算符＞][}] = 
M[＜关系运算符＞][+] = 
M[＜关系运算符＞][-] = 
M[＜关系运算符＞][*] = 
M[＜关系运算符＞][/] = 
M[＜关系运算符＞][<] = ＜关系运算符＞-><
M[＜关系运算符＞][<=] = ＜关系运算符＞-><=
M[＜关系运算符＞][>] = ＜关系运算符＞->>
M[＜关系运算符＞][>=] = ＜关系运算符＞->>=
M[＜关系运算符＞][!=] = ＜关系运算符＞->!=
M[＜关系运算符＞][==] = ＜关系运算符＞->==
M[＜关系运算符＞][digit] = 
M[＜关系运算符＞][character] = 
M[＜关系运算符＞][string] = 
M[＜关系运算符＞][id] = 
M[＜关系运算符＞][int] = 
M[＜关系运算符＞][char] = 
M[＜关系运算符＞][const] = 
M[＜关系运算符＞][=] = 
M[＜关系运算符＞][,] = 
M[＜关系运算符＞][[] = 
M[＜关系运算符＞][]] = 
M[＜关系运算符＞][void] = 
M[＜关系运算符＞][main] = 
M[＜关系运算符＞][if] = 
M[＜关系运算符＞][else] = 
M[＜关系运算符＞][while] = 
M[＜关系运算符＞][do] = 
M[＜关系运算符＞][for] = 
M[＜关系运算符＞][scanf] = 
M[＜关系运算符＞][printf] = 
M[＜关系运算符＞][return] = 


M[＜数字＞][;] = 
M[＜数字＞][(] = 
M[＜数字＞][)] = 
M[＜数字＞][{] = 
M[＜数字＞][}] = 
M[＜数字＞][+] = 
M[＜数字＞][-] = 
M[＜数字＞][*] = 
M[＜数字＞][/] = 
M[＜数字＞][<] = 
M[＜数字＞][<=] = 
M[＜数字＞][>] = 
M[＜数字＞][>=] = 
M[＜数字＞][!=] = 
M[＜数字＞][==] = 
M[＜数字＞][digit] = ＜数字＞->digit
M[＜数字＞][character] = 
M[＜数字＞][string] = 
M[＜数字＞][id] = 
M[＜数字＞][int] = 
M[＜数字＞][char] = 
M[＜数字＞][const] = 
M[＜数字＞][=] = 
M[＜数字＞][,] = 
M[＜数字＞][[] = 
M[＜数字＞][]] = 
M[＜数字＞][void] = 
M[＜数字＞][main] = 
M[＜数字＞][if] = 
M[＜数字＞][else] = 
M[＜数字＞][while] = 
M[＜数字＞][do] = 
M[＜数字＞][for] = 
M[＜数字＞][scanf] = 
M[＜数字＞][printf] = 
M[＜数字＞][return] = 


M[＜字符＞][;] = 
M[＜字符＞][(] = 
M[＜字符＞][)] = 
M[＜字符＞][{] = 
M[＜字符＞][}] = 
M[＜字符＞][+] = 
M[＜字符＞][-] = 
M[＜字符＞][*] = 
M[＜字符＞][/] = 
M[＜字符＞][<] = 
M[＜字符＞][<=] = 
M[＜字符＞][>] = 
M[＜字符＞][>=] = 
M[＜字符＞][!=] = 
M[＜字符＞][==] = 
M[＜字符＞][digit] = 
M[＜字符＞][character] = ＜字符＞->character
M[＜字符＞][string] = 
M[＜字符＞][id] = 
M[＜字符＞][int] = 
M[＜字符＞][char] = 
M[＜字符＞][const] = 
M[＜字符＞][=] = 
M[＜字符＞][,] = 
M[＜字符＞][[] = 
M[＜字符＞][]] = 
M[＜字符＞][void] = 
M[＜字符＞][main] = 
M[＜字符＞][if] = 
M[＜字符＞][else] = 
M[＜字符＞][while] = 
M[＜字符＞][do] = 
M[＜字符＞][for] = 
M[＜字符＞][scanf] = 
M[＜字符＞][printf] = 
M[＜字符＞][return] = 


M[＜字符串＞][;] = 
M[＜字符串＞][(] = 
M[＜字符串＞][)] = 
M[＜字符串＞][{] = 
M[＜字符串＞][}] = 
M[＜字符串＞][+] = 
M[＜字符串＞][-] = 
M[＜字符串＞][*] = 
M[＜字符串＞][/] = 
M[＜字符串＞][<] = 
M[＜字符串＞][<=] = 
M[＜字符串＞][>] = 
M[＜字符串＞][>=] = 
M[＜字符串＞][!=] = 
M[＜字符串＞][==] = 
M[＜字符串＞][digit] = 
M[＜字符串＞][character] = 
M[＜字符串＞][string] = ＜字符串＞->string
M[＜字符串＞][id] = 
M[＜字符串＞][int] = 
M[＜字符串＞][char] = 
M[＜字符串＞][const] = 
M[＜字符串＞][=] = 
M[＜字符串＞][,] = 
M[＜字符串＞][[] = 
M[＜字符串＞][]] = 
M[＜字符串＞][void] = 
M[＜字符串＞][main] = 
M[＜字符串＞][if] = 
M[＜字符串＞][else] = 
M[＜字符串＞][while] = 
M[＜字符串＞][do] = 
M[＜字符串＞][for] = 
M[＜字符串＞][scanf] = 
M[＜字符串＞][printf] = 
M[＜字符串＞][return] = 


M[＜无符号整数＞][;] = 
M[＜无符号整数＞][(] = 
M[＜无符号整数＞][)] = 
M[＜无符号整数＞][{] = 
M[＜无符号整数＞][}] = 
M[＜无符号整数＞][+] = 
M[＜无符号整数＞][-] = 
M[＜无符号整数＞][*] = 
M[＜无符号整数＞][/] = 
M[＜无符号整数＞][<] = 
M[＜无符号整数＞][<=] = 
M[＜无符号整数＞][>] = 
M[＜无符号整数＞][>=] = 
M[＜无符号整数＞][!=] = 
M[＜无符号整数＞][==] = 
M[＜无符号整数＞][digit] = ＜无符号整数＞->＜数字＞＜6＞
M[＜无符号整数＞][character] = 
M[＜无符号整数＞][string] = 
M[＜无符号整数＞][id] = 
M[＜无符号整数＞][int] = 
M[＜无符号整数＞][char] = 
M[＜无符号整数＞][const] = 
M[＜无符号整数＞][=] = 
M[＜无符号整数＞][,] = 
M[＜无符号整数＞][[] = 
M[＜无符号整数＞][]] = 
M[＜无符号整数＞][void] = 
M[＜无符号整数＞][main] = 
M[＜无符号整数＞][if] = 
M[＜无符号整数＞][else] = 
M[＜无符号整数＞][while] = 
M[＜无符号整数＞][do] = 
M[＜无符号整数＞][for] = 
M[＜无符号整数＞][scanf] = 
M[＜无符号整数＞][printf] = 
M[＜无符号整数＞][return] = 


M[＜6＞][;] = ＜6＞->$
M[＜6＞][(] = 
M[＜6＞][)] = ＜6＞->$
M[＜6＞][{] = 
M[＜6＞][}] = 
M[＜6＞][+] = ＜6＞->$
M[＜6＞][-] = ＜6＞->$
M[＜6＞][*] = ＜6＞->$
M[＜6＞][/] = ＜6＞->$
M[＜6＞][<] = ＜6＞->$
M[＜6＞][<=] = ＜6＞->$
M[＜6＞][>] = ＜6＞->$
M[＜6＞][>=] = ＜6＞->$
M[＜6＞][!=] = ＜6＞->$
M[＜6＞][==] = ＜6＞->$
M[＜6＞][digit] = ＜6＞->＜数字＞＜6＞
M[＜6＞][character] = 
M[＜6＞][string] = 
M[＜6＞][id] = 
M[＜6＞][int] = 
M[＜6＞][char] = 
M[＜6＞][const] = 
M[＜6＞][=] = 
M[＜6＞][,] = ＜6＞->$
M[＜6＞][[] = 
M[＜6＞][]] = ＜6＞->$
M[＜6＞][void] = 
M[＜6＞][main] = 
M[＜6＞][if] = 
M[＜6＞][else] = 
M[＜6＞][while] = 
M[＜6＞][do] = 
M[＜6＞][for] = 
M[＜6＞][scanf] = 
M[＜6＞][printf] = 
M[＜6＞][return] = 


M[＜整数＞][;] = 
M[＜整数＞][(] = 
M[＜整数＞][)] = 
M[＜整数＞][{] = 
M[＜整数＞][}] = 
M[＜整数＞][+] = ＜整数＞->＜7＞＜无符号整数＞
M[＜整数＞][-] = ＜整数＞->＜7＞＜无符号整数＞
M[＜整数＞][*] = 
M[＜整数＞][/] = 
M[＜整数＞][<] = 
M[＜整数＞][<=] = 
M[＜整数＞][>] = 
M[＜整数＞][>=] = 
M[＜整数＞][!=] = 
M[＜整数＞][==] = 
M[＜整数＞][digit] = ＜整数＞->＜7＞＜无符号整数＞
M[＜整数＞][character] = 
M[＜整数＞][string] = 
M[＜整数＞][id] = 
M[＜整数＞][int] = 
M[＜整数＞][char] = 
M[＜整数＞][const] = 
M[＜整数＞][=] = 
M[＜整数＞][,] = 
M[＜整数＞][[] = 
M[＜整数＞][]] = 
M[＜整数＞][void] = 
M[＜整数＞][main] = 
M[＜整数＞][if] = 
M[＜整数＞][else] = 
M[＜整数＞][while] = 
M[＜整数＞][do] = 
M[＜整数＞][for] = 
M[＜整数＞][scanf] = 
M[＜整数＞][printf] = 
M[＜整数＞][return] = 


M[＜7＞][;] = 
M[＜7＞][(] = ＜7＞->$
M[＜7＞][)] = 
M[＜7＞][{] = 
M[＜7＞][}] = 
M[＜7＞][+] = ＜7＞->$
M[＜7＞][-] = ＜7＞->$
M[＜7＞][*] = 
M[＜7＞][/] = 
M[＜7＞][<] = 
M[＜7＞][<=] = 
M[＜7＞][>] = 
M[＜7＞][>=] = 
M[＜7＞][!=] = 
M[＜7＞][==] = 
M[＜7＞][digit] = ＜7＞->$
M[＜7＞][character] = ＜7＞->$
M[＜7＞][string] = 
M[＜7＞][id] = ＜7＞->$
M[＜7＞][int] = 
M[＜7＞][char] = 
M[＜7＞][const] = 
M[＜7＞][=] = 
M[＜7＞][,] = 
M[＜7＞][[] = 
M[＜7＞][]] = 
M[＜7＞][void] = 
M[＜7＞][main] = 
M[＜7＞][if] = 
M[＜7＞][else] = 
M[＜7＞][while] = 
M[＜7＞][do] = 
M[＜7＞][for] = 
M[＜7＞][scanf] = 
M[＜7＞][printf] = 
M[＜7＞][return] = 


M[＜标识符＞][;] = 
M[＜标识符＞][(] = 
M[＜标识符＞][)] = 
M[＜标识符＞][{] = 
M[＜标识符＞][}] = 
M[＜标识符＞][+] = 
M[＜标识符＞][-] = 
M[＜标识符＞][*] = 
M[＜标识符＞][/] = 
M[＜标识符＞][<] = 
M[＜标识符＞][<=] = 
M[＜标识符＞][>] = 
M[＜标识符＞][>=] = 
M[＜标识符＞][!=] = 
M[＜标识符＞][==] = 
M[＜标识符＞][digit] = 
M[＜标识符＞][character] = 
M[＜标识符＞][string] = 
M[＜标识符＞][id] = ＜标识符＞->id
M[＜标识符＞][int] = 
M[＜标识符＞][char] = 
M[＜标识符＞][const] = 
M[＜标识符＞][=] = 
M[＜标识符＞][,] = 
M[＜标识符＞][[] = 
M[＜标识符＞][]] = 
M[＜标识符＞][void] = 
M[＜标识符＞][main] = 
M[＜标识符＞][if] = 
M[＜标识符＞][else] = 
M[＜标识符＞][while] = 
M[＜标识符＞][do] = 
M[＜标识符＞][for] = 
M[＜标识符＞][scanf] = 
M[＜标识符＞][printf] = 
M[＜标识符＞][return] = 


M[＜8＞][;] = 
M[＜8＞][(] = 
M[＜8＞][)] = 
M[＜8＞][{] = 
M[＜8＞][}] = 
M[＜8＞][+] = 
M[＜8＞][-] = 
M[＜8＞][*] = 
M[＜8＞][/] = 
M[＜8＞][<] = 
M[＜8＞][<=] = 
M[＜8＞][>] = 
M[＜8＞][>=] = 
M[＜8＞][!=] = 
M[＜8＞][==] = 
M[＜8＞][digit] = ＜8＞->＜9＞＜8＞
M[＜8＞][character] = 
M[＜8＞][string] = 
M[＜8＞][id] = 
M[＜8＞][int] = 
M[＜8＞][char] = 
M[＜8＞][const] = 
M[＜8＞][=] = 
M[＜8＞][,] = 
M[＜8＞][[] = 
M[＜8＞][]] = 
M[＜8＞][void] = 
M[＜8＞][main] = 
M[＜8＞][if] = 
M[＜8＞][else] = 
M[＜8＞][while] = 
M[＜8＞][do] = 
M[＜8＞][for] = 
M[＜8＞][scanf] = 
M[＜8＞][printf] = 
M[＜8＞][return] = 


M[＜9＞][;] = 
M[＜9＞][(] = 
M[＜9＞][)] = 
M[＜9＞][{] = 
M[＜9＞][}] = 
M[＜9＞][+] = 
M[＜9＞][-] = 
M[＜9＞][*] = 
M[＜9＞][/] = 
M[＜9＞][<] = 
M[＜9＞][<=] = 
M[＜9＞][>] = 
M[＜9＞][>=] = 
M[＜9＞][!=] = 
M[＜9＞][==] = 
M[＜9＞][digit] = ＜9＞->＜数字＞
M[＜9＞][character] = 
M[＜9＞][string] = 
M[＜9＞][id] = 
M[＜9＞][int] = 
M[＜9＞][char] = 
M[＜9＞][const] = 
M[＜9＞][=] = 
M[＜9＞][,] = 
M[＜9＞][[] = 
M[＜9＞][]] = 
M[＜9＞][void] = 
M[＜9＞][main] = 
M[＜9＞][if] = 
M[＜9＞][else] = 
M[＜9＞][while] = 
M[＜9＞][do] = 
M[＜9＞][for] = 
M[＜9＞][scanf] = 
M[＜9＞][printf] = 
M[＜9＞][return] = 


M[＜字母＞][;] = 
M[＜字母＞][(] = 
M[＜字母＞][)] = 
M[＜字母＞][{] = 
M[＜字母＞][}] = 
M[＜字母＞][+] = 
M[＜字母＞][-] = 
M[＜字母＞][*] = 
M[＜字母＞][/] = 
M[＜字母＞][<] = 
M[＜字母＞][<=] = 
M[＜字母＞][>] = 
M[＜字母＞][>=] = 
M[＜字母＞][!=] = 
M[＜字母＞][==] = 
M[＜字母＞][digit] = 
M[＜字母＞][character] = 
M[＜字母＞][string] = 
M[＜字母＞][id] = 
M[＜字母＞][int] = 
M[＜字母＞][char] = 
M[＜字母＞][const] = 
M[＜字母＞][=] = 
M[＜字母＞][,] = 
M[＜字母＞][[] = 
M[＜字母＞][]] = 
M[＜字母＞][void] = 
M[＜字母＞][main] = 
M[＜字母＞][if] = 
M[＜字母＞][else] = 
M[＜字母＞][while] = 
M[＜字母＞][do] = 
M[＜字母＞][for] = 
M[＜字母＞][scanf] = 
M[＜字母＞][printf] = 
M[＜字母＞][return] = 


M[＜10＞][;] = 
M[＜10＞][(] = 
M[＜10＞][)] = 
M[＜10＞][{] = 
M[＜10＞][}] = 
M[＜10＞][+] = 
M[＜10＞][-] = 
M[＜10＞][*] = 
M[＜10＞][/] = 
M[＜10＞][<] = 
M[＜10＞][<=] = 
M[＜10＞][>] = 
M[＜10＞][>=] = 
M[＜10＞][!=] = 
M[＜10＞][==] = 
M[＜10＞][digit] = 
M[＜10＞][character] = 
M[＜10＞][string] = 
M[＜10＞][id] = 
M[＜10＞][int] = ＜10＞->int＜标识符＞
M[＜10＞][char] = 
M[＜10＞][const] = 
M[＜10＞][=] = 
M[＜10＞][,] = 
M[＜10＞][[] = 
M[＜10＞][]] = 
M[＜10＞][void] = 
M[＜10＞][main] = 
M[＜10＞][if] = 
M[＜10＞][else] = 
M[＜10＞][while] = 
M[＜10＞][do] = 
M[＜10＞][for] = 
M[＜10＞][scanf] = 
M[＜10＞][printf] = 
M[＜10＞][return] = 


M[＜11＞][;] = 
M[＜11＞][(] = 
M[＜11＞][)] = 
M[＜11＞][{] = 
M[＜11＞][}] = 
M[＜11＞][+] = 
M[＜11＞][-] = 
M[＜11＞][*] = 
M[＜11＞][/] = 
M[＜11＞][<] = 
M[＜11＞][<=] = 
M[＜11＞][>] = 
M[＜11＞][>=] = 
M[＜11＞][!=] = 
M[＜11＞][==] = 
M[＜11＞][digit] = 
M[＜11＞][character] = 
M[＜11＞][string] = 
M[＜11＞][id] = 
M[＜11＞][int] = 
M[＜11＞][char] = ＜11＞->char＜标识符＞
M[＜11＞][const] = 
M[＜11＞][=] = 
M[＜11＞][,] = 
M[＜11＞][[] = 
M[＜11＞][]] = 
M[＜11＞][void] = 
M[＜11＞][main] = 
M[＜11＞][if] = 
M[＜11＞][else] = 
M[＜11＞][while] = 
M[＜11＞][do] = 
M[＜11＞][for] = 
M[＜11＞][scanf] = 
M[＜11＞][printf] = 
M[＜11＞][return] = 


M[＜常量说明＞][;] = 
M[＜常量说明＞][(] = 
M[＜常量说明＞][)] = 
M[＜常量说明＞][{] = 
M[＜常量说明＞][}] = 
M[＜常量说明＞][+] = 
M[＜常量说明＞][-] = 
M[＜常量说明＞][*] = 
M[＜常量说明＞][/] = 
M[＜常量说明＞][<] = 
M[＜常量说明＞][<=] = 
M[＜常量说明＞][>] = 
M[＜常量说明＞][>=] = 
M[＜常量说明＞][!=] = 
M[＜常量说明＞][==] = 
M[＜常量说明＞][digit] = 
M[＜常量说明＞][character] = 
M[＜常量说明＞][string] = 
M[＜常量说明＞][id] = 
M[＜常量说明＞][int] = 
M[＜常量说明＞][char] = 
M[＜常量说明＞][const] = ＜常量说明＞->const＜常量定义＞;＜2＞
M[＜常量说明＞][=] = 
M[＜常量说明＞][,] = 
M[＜常量说明＞][[] = 
M[＜常量说明＞][]] = 
M[＜常量说明＞][void] = 
M[＜常量说明＞][main] = 
M[＜常量说明＞][if] = 
M[＜常量说明＞][else] = 
M[＜常量说明＞][while] = 
M[＜常量说明＞][do] = 
M[＜常量说明＞][for] = 
M[＜常量说明＞][scanf] = 
M[＜常量说明＞][printf] = 
M[＜常量说明＞][return] = 


M[＜常量定义＞][;] = 
M[＜常量定义＞][(] = 
M[＜常量定义＞][)] = 
M[＜常量定义＞][{] = 
M[＜常量定义＞][}] = 
M[＜常量定义＞][+] = 
M[＜常量定义＞][-] = 
M[＜常量定义＞][*] = 
M[＜常量定义＞][/] = 
M[＜常量定义＞][<] = 
M[＜常量定义＞][<=] = 
M[＜常量定义＞][>] = 
M[＜常量定义＞][>=] = 
M[＜常量定义＞][!=] = 
M[＜常量定义＞][==] = 
M[＜常量定义＞][digit] = 
M[＜常量定义＞][character] = 
M[＜常量定义＞][string] = 
M[＜常量定义＞][id] = 
M[＜常量定义＞][int] = ＜常量定义＞->＜10＞=＜整数＞＜3＞
M[＜常量定义＞][char] = ＜常量定义＞->＜11＞=＜字符＞＜12＞
M[＜常量定义＞][const] = 
M[＜常量定义＞][=] = 
M[＜常量定义＞][,] = 
M[＜常量定义＞][[] = 
M[＜常量定义＞][]] = 
M[＜常量定义＞][void] = 
M[＜常量定义＞][main] = 
M[＜常量定义＞][if] = 
M[＜常量定义＞][else] = 
M[＜常量定义＞][while] = 
M[＜常量定义＞][do] = 
M[＜常量定义＞][for] = 
M[＜常量定义＞][scanf] = 
M[＜常量定义＞][printf] = 
M[＜常量定义＞][return] = 


M[＜2＞][;] = ＜2＞->$
M[＜2＞][(] = 
M[＜2＞][)] = 
M[＜2＞][{] = ＜2＞->$
M[＜2＞][}] = ＜2＞->$
M[＜2＞][+] = 
M[＜2＞][-] = 
M[＜2＞][*] = 
M[＜2＞][/] = 
M[＜2＞][<] = 
M[＜2＞][<=] = 
M[＜2＞][>] = 
M[＜2＞][>=] = 
M[＜2＞][!=] = 
M[＜2＞][==] = 
M[＜2＞][digit] = 
M[＜2＞][character] = 
M[＜2＞][string] = 
M[＜2＞][id] = ＜2＞->$
M[＜2＞][int] = ＜2＞->$
M[＜2＞][char] = ＜2＞->$
M[＜2＞][const] = ＜2＞->$
M[＜2＞][=] = 
M[＜2＞][,] = 
M[＜2＞][[] = 
M[＜2＞][]] = 
M[＜2＞][void] = ＜2＞->$
M[＜2＞][main] = 
M[＜2＞][if] = ＜2＞->$
M[＜2＞][else] = 
M[＜2＞][while] = ＜2＞->$
M[＜2＞][do] = ＜2＞->$
M[＜2＞][for] = ＜2＞->$
M[＜2＞][scanf] = ＜2＞->$
M[＜2＞][printf] = ＜2＞->$
M[＜2＞][return] = ＜2＞->$


M[＜3＞][;] = ＜3＞->$
M[＜3＞][(] = 
M[＜3＞][)] = 
M[＜3＞][{] = 
M[＜3＞][}] = 
M[＜3＞][+] = 
M[＜3＞][-] = 
M[＜3＞][*] = 
M[＜3＞][/] = 
M[＜3＞][<] = 
M[＜3＞][<=] = 
M[＜3＞][>] = 
M[＜3＞][>=] = 
M[＜3＞][!=] = 
M[＜3＞][==] = 
M[＜3＞][digit] = 
M[＜3＞][character] = 
M[＜3＞][string] = 
M[＜3＞][id] = 
M[＜3＞][int] = 
M[＜3＞][char] = 
M[＜3＞][const] = 
M[＜3＞][=] = 
M[＜3＞][,] = ＜3＞->,＜标识符＞=＜整数＞＜3＞
M[＜3＞][[] = 
M[＜3＞][]] = 
M[＜3＞][void] = 
M[＜3＞][main] = 
M[＜3＞][if] = 
M[＜3＞][else] = 
M[＜3＞][while] = 
M[＜3＞][do] = 
M[＜3＞][for] = 
M[＜3＞][scanf] = 
M[＜3＞][printf] = 
M[＜3＞][return] = 


M[＜12＞][;] = ＜12＞->$
M[＜12＞][(] = 
M[＜12＞][)] = 
M[＜12＞][{] = 
M[＜12＞][}] = 
M[＜12＞][+] = 
M[＜12＞][-] = 
M[＜12＞][*] = 
M[＜12＞][/] = 
M[＜12＞][<] = 
M[＜12＞][<=] = 
M[＜12＞][>] = 
M[＜12＞][>=] = 
M[＜12＞][!=] = 
M[＜12＞][==] = 
M[＜12＞][digit] = 
M[＜12＞][character] = 
M[＜12＞][string] = 
M[＜12＞][id] = 
M[＜12＞][int] = 
M[＜12＞][char] = 
M[＜12＞][const] = 
M[＜12＞][=] = 
M[＜12＞][,] = ＜12＞->,＜标识符＞=＜字符＞＜12＞
M[＜12＞][[] = 
M[＜12＞][]] = 
M[＜12＞][void] = 
M[＜12＞][main] = 
M[＜12＞][if] = 
M[＜12＞][else] = 
M[＜12＞][while] = 
M[＜12＞][do] = 
M[＜12＞][for] = 
M[＜12＞][scanf] = 
M[＜12＞][printf] = 
M[＜12＞][return] = 


M[＜4＞][;] = ＜4＞->$
M[＜4＞][(] = 
M[＜4＞][)] = 
M[＜4＞][{] = ＜4＞->$
M[＜4＞][}] = ＜4＞->$
M[＜4＞][+] = 
M[＜4＞][-] = 
M[＜4＞][*] = 
M[＜4＞][/] = 
M[＜4＞][<] = 
M[＜4＞][<=] = 
M[＜4＞][>] = 
M[＜4＞][>=] = 
M[＜4＞][!=] = 
M[＜4＞][==] = 
M[＜4＞][digit] = 
M[＜4＞][character] = 
M[＜4＞][string] = 
M[＜4＞][id] = ＜4＞->$
M[＜4＞][int] = ＜4＞->＜变量说明＞＜4＞
M[＜4＞][char] = ＜4＞->＜变量说明＞＜4＞
M[＜4＞][const] = 
M[＜4＞][=] = 
M[＜4＞][,] = 
M[＜4＞][[] = 
M[＜4＞][]] = 
M[＜4＞][void] = 
M[＜4＞][main] = 
M[＜4＞][if] = ＜4＞->$
M[＜4＞][else] = 
M[＜4＞][while] = ＜4＞->$
M[＜4＞][do] = ＜4＞->$
M[＜4＞][for] = ＜4＞->$
M[＜4＞][scanf] = ＜4＞->$
M[＜4＞][printf] = ＜4＞->$
M[＜4＞][return] = ＜4＞->$


M[＜变量说明＞][;] = 
M[＜变量说明＞][(] = 
M[＜变量说明＞][)] = 
M[＜变量说明＞][{] = 
M[＜变量说明＞][}] = 
M[＜变量说明＞][+] = 
M[＜变量说明＞][-] = 
M[＜变量说明＞][*] = 
M[＜变量说明＞][/] = 
M[＜变量说明＞][<] = 
M[＜变量说明＞][<=] = 
M[＜变量说明＞][>] = 
M[＜变量说明＞][>=] = 
M[＜变量说明＞][!=] = 
M[＜变量说明＞][==] = 
M[＜变量说明＞][digit] = 
M[＜变量说明＞][character] = 
M[＜变量说明＞][string] = 
M[＜变量说明＞][id] = 
M[＜变量说明＞][int] = ＜变量说明＞->＜变量定义＞;＜5＞
M[＜变量说明＞][char] = ＜变量说明＞->＜变量定义＞;＜5＞
M[＜变量说明＞][const] = 
M[＜变量说明＞][=] = 
M[＜变量说明＞][,] = 
M[＜变量说明＞][[] = 
M[＜变量说明＞][]] = 
M[＜变量说明＞][void] = 
M[＜变量说明＞][main] = 
M[＜变量说明＞][if] = 
M[＜变量说明＞][else] = 
M[＜变量说明＞][while] = 
M[＜变量说明＞][do] = 
M[＜变量说明＞][for] = 
M[＜变量说明＞][scanf] = 
M[＜变量说明＞][printf] = 
M[＜变量说明＞][return] = 


M[＜变量定义＞][;] = 
M[＜变量定义＞][(] = 
M[＜变量定义＞][)] = 
M[＜变量定义＞][{] = 
M[＜变量定义＞][}] = 
M[＜变量定义＞][+] = 
M[＜变量定义＞][-] = 
M[＜变量定义＞][*] = 
M[＜变量定义＞][/] = 
M[＜变量定义＞][<] = 
M[＜变量定义＞][<=] = 
M[＜变量定义＞][>] = 
M[＜变量定义＞][>=] = 
M[＜变量定义＞][!=] = 
M[＜变量定义＞][==] = 
M[＜变量定义＞][digit] = 
M[＜变量定义＞][character] = 
M[＜变量定义＞][string] = 
M[＜变量定义＞][id] = 
M[＜变量定义＞][int] = ＜变量定义＞->＜类型标识符＞＜13＞＜14＞
M[＜变量定义＞][char] = ＜变量定义＞->＜类型标识符＞＜13＞＜14＞
M[＜变量定义＞][const] = 
M[＜变量定义＞][=] = 
M[＜变量定义＞][,] = 
M[＜变量定义＞][[] = 
M[＜变量定义＞][]] = 
M[＜变量定义＞][void] = 
M[＜变量定义＞][main] = 
M[＜变量定义＞][if] = 
M[＜变量定义＞][else] = 
M[＜变量定义＞][while] = 
M[＜变量定义＞][do] = 
M[＜变量定义＞][for] = 
M[＜变量定义＞][scanf] = 
M[＜变量定义＞][printf] = 
M[＜变量定义＞][return] = 


M[＜5＞][;] = ＜5＞->$
M[＜5＞][(] = 
M[＜5＞][)] = 
M[＜5＞][{] = ＜5＞->$
M[＜5＞][}] = ＜5＞->$
M[＜5＞][+] = 
M[＜5＞][-] = 
M[＜5＞][*] = 
M[＜5＞][/] = 
M[＜5＞][<] = 
M[＜5＞][<=] = 
M[＜5＞][>] = 
M[＜5＞][>=] = 
M[＜5＞][!=] = 
M[＜5＞][==] = 
M[＜5＞][digit] = 
M[＜5＞][character] = 
M[＜5＞][string] = 
M[＜5＞][id] = ＜5＞->$
M[＜5＞][int] = ＜5＞->$
M[＜5＞][char] = ＜5＞->$
M[＜5＞][const] = 
M[＜5＞][=] = 
M[＜5＞][,] = 
M[＜5＞][[] = 
M[＜5＞][]] = 
M[＜5＞][void] = 
M[＜5＞][main] = 
M[＜5＞][if] = ＜5＞->$
M[＜5＞][else] = 
M[＜5＞][while] = ＜5＞->$
M[＜5＞][do] = ＜5＞->$
M[＜5＞][for] = ＜5＞->$
M[＜5＞][scanf] = ＜5＞->$
M[＜5＞][printf] = ＜5＞->$
M[＜5＞][return] = ＜5＞->$


M[＜类型标识符＞][;] = 
M[＜类型标识符＞][(] = 
M[＜类型标识符＞][)] = 
M[＜类型标识符＞][{] = 
M[＜类型标识符＞][}] = 
M[＜类型标识符＞][+] = 
M[＜类型标识符＞][-] = 
M[＜类型标识符＞][*] = 
M[＜类型标识符＞][/] = 
M[＜类型标识符＞][<] = 
M[＜类型标识符＞][<=] = 
M[＜类型标识符＞][>] = 
M[＜类型标识符＞][>=] = 
M[＜类型标识符＞][!=] = 
M[＜类型标识符＞][==] = 
M[＜类型标识符＞][digit] = 
M[＜类型标识符＞][character] = 
M[＜类型标识符＞][string] = 
M[＜类型标识符＞][id] = 
M[＜类型标识符＞][int] = ＜类型标识符＞->int
M[＜类型标识符＞][char] = ＜类型标识符＞->char
M[＜类型标识符＞][const] = 
M[＜类型标识符＞][=] = 
M[＜类型标识符＞][,] = 
M[＜类型标识符＞][[] = 
M[＜类型标识符＞][]] = 
M[＜类型标识符＞][void] = 
M[＜类型标识符＞][main] = 
M[＜类型标识符＞][if] = 
M[＜类型标识符＞][else] = 
M[＜类型标识符＞][while] = 
M[＜类型标识符＞][do] = 
M[＜类型标识符＞][for] = 
M[＜类型标识符＞][scanf] = 
M[＜类型标识符＞][printf] = 
M[＜类型标识符＞][return] = 


M[＜13＞][;] = 
M[＜13＞][(] = 
M[＜13＞][)] = 
M[＜13＞][{] = 
M[＜13＞][}] = 
M[＜13＞][+] = 
M[＜13＞][-] = 
M[＜13＞][*] = 
M[＜13＞][/] = 
M[＜13＞][<] = 
M[＜13＞][<=] = 
M[＜13＞][>] = 
M[＜13＞][>=] = 
M[＜13＞][!=] = 
M[＜13＞][==] = 
M[＜13＞][digit] = 
M[＜13＞][character] = 
M[＜13＞][string] = 
M[＜13＞][id] = ＜13＞->＜标识符＞＜31＞
M[＜13＞][int] = 
M[＜13＞][char] = 
M[＜13＞][const] = 
M[＜13＞][=] = 
M[＜13＞][,] = 
M[＜13＞][[] = 
M[＜13＞][]] = 
M[＜13＞][void] = 
M[＜13＞][main] = 
M[＜13＞][if] = 
M[＜13＞][else] = 
M[＜13＞][while] = 
M[＜13＞][do] = 
M[＜13＞][for] = 
M[＜13＞][scanf] = 
M[＜13＞][printf] = 
M[＜13＞][return] = 


M[＜31＞][;] = ＜31＞->$
M[＜31＞][(] = 
M[＜31＞][)] = 
M[＜31＞][{] = 
M[＜31＞][}] = 
M[＜31＞][+] = 
M[＜31＞][-] = 
M[＜31＞][*] = 
M[＜31＞][/] = 
M[＜31＞][<] = 
M[＜31＞][<=] = 
M[＜31＞][>] = 
M[＜31＞][>=] = 
M[＜31＞][!=] = 
M[＜31＞][==] = 
M[＜31＞][digit] = 
M[＜31＞][character] = 
M[＜31＞][string] = 
M[＜31＞][id] = 
M[＜31＞][int] = 
M[＜31＞][char] = 
M[＜31＞][const] = 
M[＜31＞][=] = 
M[＜31＞][,] = ＜31＞->$
M[＜31＞][[] = ＜31＞->[＜无符号整数＞]
M[＜31＞][]] = 
M[＜31＞][void] = 
M[＜31＞][main] = 
M[＜31＞][if] = 
M[＜31＞][else] = 
M[＜31＞][while] = 
M[＜31＞][do] = 
M[＜31＞][for] = 
M[＜31＞][scanf] = 
M[＜31＞][printf] = 
M[＜31＞][return] = 


M[＜声明头部＞][;] = 
M[＜声明头部＞][(] = 
M[＜声明头部＞][)] = 
M[＜声明头部＞][{] = 
M[＜声明头部＞][}] = 
M[＜声明头部＞][+] = 
M[＜声明头部＞][-] = 
M[＜声明头部＞][*] = 
M[＜声明头部＞][/] = 
M[＜声明头部＞][<] = 
M[＜声明头部＞][<=] = 
M[＜声明头部＞][>] = 
M[＜声明头部＞][>=] = 
M[＜声明头部＞][!=] = 
M[＜声明头部＞][==] = 
M[＜声明头部＞][digit] = 
M[＜声明头部＞][character] = 
M[＜声明头部＞][string] = 
M[＜声明头部＞][id] = 
M[＜声明头部＞][int] = 
M[＜声明头部＞][char] = 
M[＜声明头部＞][const] = 
M[＜声明头部＞][=] = 
M[＜声明头部＞][,] = 
M[＜声明头部＞][[] = 
M[＜声明头部＞][]] = 
M[＜声明头部＞][void] = 
M[＜声明头部＞][main] = 
M[＜声明头部＞][if] = 
M[＜声明头部＞][else] = 
M[＜声明头部＞][while] = 
M[＜声明头部＞][do] = 
M[＜声明头部＞][for] = 
M[＜声明头部＞][scanf] = 
M[＜声明头部＞][printf] = 
M[＜声明头部＞][return] = 


M[＜语句列＞][;] = ＜语句列＞->＜20＞
M[＜语句列＞][(] = 
M[＜语句列＞][)] = 
M[＜语句列＞][{] = ＜语句列＞->＜20＞
M[＜语句列＞][}] = ＜语句列＞->＜20＞
M[＜语句列＞][+] = 
M[＜语句列＞][-] = 
M[＜语句列＞][*] = 
M[＜语句列＞][/] = 
M[＜语句列＞][<] = 
M[＜语句列＞][<=] = 
M[＜语句列＞][>] = 
M[＜语句列＞][>=] = 
M[＜语句列＞][!=] = 
M[＜语句列＞][==] = 
M[＜语句列＞][digit] = 
M[＜语句列＞][character] = 
M[＜语句列＞][string] = 
M[＜语句列＞][id] = ＜语句列＞->＜20＞
M[＜语句列＞][int] = 
M[＜语句列＞][char] = 
M[＜语句列＞][const] = 
M[＜语句列＞][=] = 
M[＜语句列＞][,] = 
M[＜语句列＞][[] = 
M[＜语句列＞][]] = 
M[＜语句列＞][void] = 
M[＜语句列＞][main] = 
M[＜语句列＞][if] = ＜语句列＞->＜20＞
M[＜语句列＞][else] = 
M[＜语句列＞][while] = ＜语句列＞->＜20＞
M[＜语句列＞][do] = ＜语句列＞->＜20＞
M[＜语句列＞][for] = ＜语句列＞->＜20＞
M[＜语句列＞][scanf] = ＜语句列＞->＜20＞
M[＜语句列＞][printf] = ＜语句列＞->＜20＞
M[＜语句列＞][return] = ＜语句列＞->＜20＞


M[＜15＞][;] = 
M[＜15＞][(] = 
M[＜15＞][)] = ＜15＞->$
M[＜15＞][{] = 
M[＜15＞][}] = 
M[＜15＞][+] = 
M[＜15＞][-] = 
M[＜15＞][*] = 
M[＜15＞][/] = 
M[＜15＞][<] = 
M[＜15＞][<=] = 
M[＜15＞][>] = 
M[＜15＞][>=] = 
M[＜15＞][!=] = 
M[＜15＞][==] = 
M[＜15＞][digit] = 
M[＜15＞][character] = 
M[＜15＞][string] = 
M[＜15＞][id] = 
M[＜15＞][int] = 
M[＜15＞][char] = 
M[＜15＞][const] = 
M[＜15＞][=] = 
M[＜15＞][,] = ＜15＞->,＜类型标识符＞＜标识符＞＜15＞
M[＜15＞][[] = 
M[＜15＞][]] = 
M[＜15＞][void] = 
M[＜15＞][main] = 
M[＜15＞][if] = 
M[＜15＞][else] = 
M[＜15＞][while] = 
M[＜15＞][do] = 
M[＜15＞][for] = 
M[＜15＞][scanf] = 
M[＜15＞][printf] = 
M[＜15＞][return] = 


M[＜表达式＞][;] = 
M[＜表达式＞][(] = ＜表达式＞->＜7＞＜项＞＜16＞
M[＜表达式＞][)] = 
M[＜表达式＞][{] = 
M[＜表达式＞][}] = 
M[＜表达式＞][+] = ＜表达式＞->＜7＞＜项＞＜16＞
M[＜表达式＞][-] = ＜表达式＞->＜7＞＜项＞＜16＞
M[＜表达式＞][*] = 
M[＜表达式＞][/] = 
M[＜表达式＞][<] = 
M[＜表达式＞][<=] = 
M[＜表达式＞][>] = 
M[＜表达式＞][>=] = 
M[＜表达式＞][!=] = 
M[＜表达式＞][==] = 
M[＜表达式＞][digit] = ＜表达式＞->＜7＞＜项＞＜16＞
M[＜表达式＞][character] = ＜表达式＞->＜7＞＜项＞＜16＞
M[＜表达式＞][string] = 
M[＜表达式＞][id] = ＜表达式＞->＜7＞＜项＞＜16＞
M[＜表达式＞][int] = 
M[＜表达式＞][char] = 
M[＜表达式＞][const] = 
M[＜表达式＞][=] = 
M[＜表达式＞][,] = 
M[＜表达式＞][[] = 
M[＜表达式＞][]] = 
M[＜表达式＞][void] = 
M[＜表达式＞][main] = 
M[＜表达式＞][if] = 
M[＜表达式＞][else] = 
M[＜表达式＞][while] = 
M[＜表达式＞][do] = 
M[＜表达式＞][for] = 
M[＜表达式＞][scanf] = 
M[＜表达式＞][printf] = 
M[＜表达式＞][return] = 


M[＜项＞][;] = 
M[＜项＞][(] = ＜项＞->＜因子＞＜17＞
M[＜项＞][)] = 
M[＜项＞][{] = 
M[＜项＞][}] = 
M[＜项＞][+] = ＜项＞->＜因子＞＜17＞
M[＜项＞][-] = ＜项＞->＜因子＞＜17＞
M[＜项＞][*] = 
M[＜项＞][/] = 
M[＜项＞][<] = 
M[＜项＞][<=] = 
M[＜项＞][>] = 
M[＜项＞][>=] = 
M[＜项＞][!=] = 
M[＜项＞][==] = 
M[＜项＞][digit] = ＜项＞->＜因子＞＜17＞
M[＜项＞][character] = ＜项＞->＜因子＞＜17＞
M[＜项＞][string] = 
M[＜项＞][id] = ＜项＞->＜因子＞＜17＞
M[＜项＞][int] = 
M[＜项＞][char] = 
M[＜项＞][const] = 
M[＜项＞][=] = 
M[＜项＞][,] = 
M[＜项＞][[] = 
M[＜项＞][]] = 
M[＜项＞][void] = 
M[＜项＞][main] = 
M[＜项＞][if] = 
M[＜项＞][else] = 
M[＜项＞][while] = 
M[＜项＞][do] = 
M[＜项＞][for] = 
M[＜项＞][scanf] = 
M[＜项＞][printf] = 
M[＜项＞][return] = 


M[＜16＞][;] = ＜16＞->$
M[＜16＞][(] = 
M[＜16＞][)] = ＜16＞->$
M[＜16＞][{] = 
M[＜16＞][}] = 
M[＜16＞][+] = ＜16＞->＜加法运算符＞＜项＞＜16＞
M[＜16＞][-] = ＜16＞->＜加法运算符＞＜项＞＜16＞
M[＜16＞][*] = 
M[＜16＞][/] = 
M[＜16＞][<] = ＜16＞->$
M[＜16＞][<=] = ＜16＞->$
M[＜16＞][>] = ＜16＞->$
M[＜16＞][>=] = ＜16＞->$
M[＜16＞][!=] = ＜16＞->$
M[＜16＞][==] = ＜16＞->$
M[＜16＞][digit] = 
M[＜16＞][character] = 
M[＜16＞][string] = 
M[＜16＞][id] = 
M[＜16＞][int] = 
M[＜16＞][char] = 
M[＜16＞][const] = 
M[＜16＞][=] = 
M[＜16＞][,] = ＜16＞->$
M[＜16＞][[] = 
M[＜16＞][]] = ＜16＞->$
M[＜16＞][void] = 
M[＜16＞][main] = 
M[＜16＞][if] = 
M[＜16＞][else] = 
M[＜16＞][while] = 
M[＜16＞][do] = 
M[＜16＞][for] = 
M[＜16＞][scanf] = 
M[＜16＞][printf] = 
M[＜16＞][return] = 


M[＜因子＞][;] = 
M[＜因子＞][(] = ＜因子＞->(＜表达式＞)
M[＜因子＞][)] = 
M[＜因子＞][{] = 
M[＜因子＞][}] = 
M[＜因子＞][+] = ＜因子＞->＜整数＞
M[＜因子＞][-] = ＜因子＞->＜整数＞
M[＜因子＞][*] = 
M[＜因子＞][/] = 
M[＜因子＞][<] = 
M[＜因子＞][<=] = 
M[＜因子＞][>] = 
M[＜因子＞][>=] = 
M[＜因子＞][!=] = 
M[＜因子＞][==] = 
M[＜因子＞][digit] = ＜因子＞->＜整数＞
M[＜因子＞][character] = ＜因子＞->＜字符＞
M[＜因子＞][string] = 
M[＜因子＞][id] = ＜因子＞->＜标识符＞＜32＞
M[＜因子＞][int] = 
M[＜因子＞][char] = 
M[＜因子＞][const] = 
M[＜因子＞][=] = 
M[＜因子＞][,] = 
M[＜因子＞][[] = 
M[＜因子＞][]] = 
M[＜因子＞][void] = 
M[＜因子＞][main] = 
M[＜因子＞][if] = 
M[＜因子＞][else] = 
M[＜因子＞][while] = 
M[＜因子＞][do] = 
M[＜因子＞][for] = 
M[＜因子＞][scanf] = 
M[＜因子＞][printf] = 
M[＜因子＞][return] = 


M[＜17＞][;] = ＜17＞->$
M[＜17＞][(] = 
M[＜17＞][)] = ＜17＞->$
M[＜17＞][{] = 
M[＜17＞][}] = 
M[＜17＞][+] = ＜17＞->$
M[＜17＞][-] = ＜17＞->$
M[＜17＞][*] = ＜17＞->＜乘法运算符＞＜因子＞＜17＞
M[＜17＞][/] = ＜17＞->＜乘法运算符＞＜因子＞＜17＞
M[＜17＞][<] = ＜17＞->$
M[＜17＞][<=] = ＜17＞->$
M[＜17＞][>] = ＜17＞->$
M[＜17＞][>=] = ＜17＞->$
M[＜17＞][!=] = ＜17＞->$
M[＜17＞][==] = ＜17＞->$
M[＜17＞][digit] = 
M[＜17＞][character] = 
M[＜17＞][string] = 
M[＜17＞][id] = 
M[＜17＞][int] = 
M[＜17＞][char] = 
M[＜17＞][const] = 
M[＜17＞][=] = 
M[＜17＞][,] = ＜17＞->$
M[＜17＞][[] = 
M[＜17＞][]] = ＜17＞->$
M[＜17＞][void] = 
M[＜17＞][main] = 
M[＜17＞][if] = 
M[＜17＞][else] = 
M[＜17＞][while] = 
M[＜17＞][do] = 
M[＜17＞][for] = 
M[＜17＞][scanf] = 
M[＜17＞][printf] = 
M[＜17＞][return] = 


M[＜32＞][;] = ＜32＞->$
M[＜32＞][(] = ＜32＞->(＜值参数表＞)
M[＜32＞][)] = ＜32＞->$
M[＜32＞][{] = 
M[＜32＞][}] = 
M[＜32＞][+] = ＜32＞->$
M[＜32＞][-] = ＜32＞->$
M[＜32＞][*] = ＜32＞->$
M[＜32＞][/] = ＜32＞->$
M[＜32＞][<] = ＜32＞->$
M[＜32＞][<=] = ＜32＞->$
M[＜32＞][>] = ＜32＞->$
M[＜32＞][>=] = ＜32＞->$
M[＜32＞][!=] = ＜32＞->$
M[＜32＞][==] = ＜32＞->$
M[＜32＞][digit] = 
M[＜32＞][character] = 
M[＜32＞][string] = 
M[＜32＞][id] = 
M[＜32＞][int] = 
M[＜32＞][char] = 
M[＜32＞][const] = 
M[＜32＞][=] = 
M[＜32＞][,] = ＜32＞->$
M[＜32＞][[] = ＜32＞->[＜表达式＞]
M[＜32＞][]] = ＜32＞->$
M[＜32＞][void] = 
M[＜32＞][main] = 
M[＜32＞][if] = 
M[＜32＞][else] = 
M[＜32＞][while] = 
M[＜32＞][do] = 
M[＜32＞][for] = 
M[＜32＞][scanf] = 
M[＜32＞][printf] = 
M[＜32＞][return] = 


M[＜值参数表＞][;] = 
M[＜值参数表＞][(] = ＜值参数表＞->＜表达式＞＜34＞
M[＜值参数表＞][)] = ＜值参数表＞->$
M[＜值参数表＞][{] = 
M[＜值参数表＞][}] = 
M[＜值参数表＞][+] = ＜值参数表＞->＜表达式＞＜34＞
M[＜值参数表＞][-] = ＜值参数表＞->＜表达式＞＜34＞
M[＜值参数表＞][*] = 
M[＜值参数表＞][/] = 
M[＜值参数表＞][<] = 
M[＜值参数表＞][<=] = 
M[＜值参数表＞][>] = 
M[＜值参数表＞][>=] = 
M[＜值参数表＞][!=] = 
M[＜值参数表＞][==] = 
M[＜值参数表＞][digit] = ＜值参数表＞->＜表达式＞＜34＞
M[＜值参数表＞][character] = ＜值参数表＞->＜表达式＞＜34＞
M[＜值参数表＞][string] = 
M[＜值参数表＞][id] = ＜值参数表＞->＜表达式＞＜34＞
M[＜值参数表＞][int] = 
M[＜值参数表＞][char] = 
M[＜值参数表＞][const] = 
M[＜值参数表＞][=] = 
M[＜值参数表＞][,] = 
M[＜值参数表＞][[] = 
M[＜值参数表＞][]] = 
M[＜值参数表＞][void] = 
M[＜值参数表＞][main] = 
M[＜值参数表＞][if] = 
M[＜值参数表＞][else] = 
M[＜值参数表＞][while] = 
M[＜值参数表＞][do] = 
M[＜值参数表＞][for] = 
M[＜值参数表＞][scanf] = 
M[＜值参数表＞][printf] = 
M[＜值参数表＞][return] = 


M[＜语句＞][;] = ＜语句＞->;
M[＜语句＞][(] = 
M[＜语句＞][)] = 
M[＜语句＞][{] = ＜语句＞->{＜语句列＞}
M[＜语句＞][}] = 
M[＜语句＞][+] = 
M[＜语句＞][-] = 
M[＜语句＞][*] = 
M[＜语句＞][/] = 
M[＜语句＞][<] = 
M[＜语句＞][<=] = 
M[＜语句＞][>] = 
M[＜语句＞][>=] = 
M[＜语句＞][!=] = 
M[＜语句＞][==] = 
M[＜语句＞][digit] = 
M[＜语句＞][character] = 
M[＜语句＞][string] = 
M[＜语句＞][id] = ＜语句＞->＜赋值语句＞;
M[＜语句＞][int] = 
M[＜语句＞][char] = 
M[＜语句＞][const] = 
M[＜语句＞][=] = 
M[＜语句＞][,] = 
M[＜语句＞][[] = 
M[＜语句＞][]] = 
M[＜语句＞][void] = 
M[＜语句＞][main] = 
M[＜语句＞][if] = ＜语句＞->＜条件语句＞
M[＜语句＞][else] = 
M[＜语句＞][while] = ＜语句＞->＜循环语句＞
M[＜语句＞][do] = ＜语句＞->＜循环语句＞
M[＜语句＞][for] = ＜语句＞->＜循环语句＞
M[＜语句＞][scanf] = ＜语句＞->＜读语句＞;
M[＜语句＞][printf] = ＜语句＞->＜写语句＞;
M[＜语句＞][return] = ＜语句＞->＜返回语句＞;


M[＜条件语句＞][;] = 
M[＜条件语句＞][(] = 
M[＜条件语句＞][)] = 
M[＜条件语句＞][{] = 
M[＜条件语句＞][}] = 
M[＜条件语句＞][+] = 
M[＜条件语句＞][-] = 
M[＜条件语句＞][*] = 
M[＜条件语句＞][/] = 
M[＜条件语句＞][<] = 
M[＜条件语句＞][<=] = 
M[＜条件语句＞][>] = 
M[＜条件语句＞][>=] = 
M[＜条件语句＞][!=] = 
M[＜条件语句＞][==] = 
M[＜条件语句＞][digit] = 
M[＜条件语句＞][character] = 
M[＜条件语句＞][string] = 
M[＜条件语句＞][id] = 
M[＜条件语句＞][int] = 
M[＜条件语句＞][char] = 
M[＜条件语句＞][const] = 
M[＜条件语句＞][=] = 
M[＜条件语句＞][,] = 
M[＜条件语句＞][[] = 
M[＜条件语句＞][]] = 
M[＜条件语句＞][void] = 
M[＜条件语句＞][main] = 
M[＜条件语句＞][if] = ＜条件语句＞->if(＜条件＞)＜语句＞＜19＞
M[＜条件语句＞][else] = 
M[＜条件语句＞][while] = 
M[＜条件语句＞][do] = 
M[＜条件语句＞][for] = 
M[＜条件语句＞][scanf] = 
M[＜条件语句＞][printf] = 
M[＜条件语句＞][return] = 


M[＜循环语句＞][;] = 
M[＜循环语句＞][(] = 
M[＜循环语句＞][)] = 
M[＜循环语句＞][{] = 
M[＜循环语句＞][}] = 
M[＜循环语句＞][+] = 
M[＜循环语句＞][-] = 
M[＜循环语句＞][*] = 
M[＜循环语句＞][/] = 
M[＜循环语句＞][<] = 
M[＜循环语句＞][<=] = 
M[＜循环语句＞][>] = 
M[＜循环语句＞][>=] = 
M[＜循环语句＞][!=] = 
M[＜循环语句＞][==] = 
M[＜循环语句＞][digit] = 
M[＜循环语句＞][character] = 
M[＜循环语句＞][string] = 
M[＜循环语句＞][id] = 
M[＜循环语句＞][int] = 
M[＜循环语句＞][char] = 
M[＜循环语句＞][const] = 
M[＜循环语句＞][=] = 
M[＜循环语句＞][,] = 
M[＜循环语句＞][[] = 
M[＜循环语句＞][]] = 
M[＜循环语句＞][void] = 
M[＜循环语句＞][main] = 
M[＜循环语句＞][if] = 
M[＜循环语句＞][else] = 
M[＜循环语句＞][while] = ＜循环语句＞->while(＜条件＞)＜语句＞
M[＜循环语句＞][do] = ＜循环语句＞->do＜语句＞while(＜条件＞)
M[＜循环语句＞][for] = ＜循环语句＞->for(＜标识符＞=＜表达式＞;＜条件＞;＜标识符＞=＜标识符＞＜加法运算符＞＜步长＞)＜语句＞
M[＜循环语句＞][scanf] = 
M[＜循环语句＞][printf] = 
M[＜循环语句＞][return] = 


M[＜有返回值函数调用语句＞][;] = 
M[＜有返回值函数调用语句＞][(] = 
M[＜有返回值函数调用语句＞][)] = 
M[＜有返回值函数调用语句＞][{] = 
M[＜有返回值函数调用语句＞][}] = 
M[＜有返回值函数调用语句＞][+] = 
M[＜有返回值函数调用语句＞][-] = 
M[＜有返回值函数调用语句＞][*] = 
M[＜有返回值函数调用语句＞][/] = 
M[＜有返回值函数调用语句＞][<] = 
M[＜有返回值函数调用语句＞][<=] = 
M[＜有返回值函数调用语句＞][>] = 
M[＜有返回值函数调用语句＞][>=] = 
M[＜有返回值函数调用语句＞][!=] = 
M[＜有返回值函数调用语句＞][==] = 
M[＜有返回值函数调用语句＞][digit] = 
M[＜有返回值函数调用语句＞][character] = 
M[＜有返回值函数调用语句＞][string] = 
M[＜有返回值函数调用语句＞][id] = ＜有返回值函数调用语句＞->＜标识符＞(＜值参数表＞)
M[＜有返回值函数调用语句＞][int] = 
M[＜有返回值函数调用语句＞][char] = 
M[＜有返回值函数调用语句＞][const] = 
M[＜有返回值函数调用语句＞][=] = 
M[＜有返回值函数调用语句＞][,] = 
M[＜有返回值函数调用语句＞][[] = 
M[＜有返回值函数调用语句＞][]] = 
M[＜有返回值函数调用语句＞][void] = 
M[＜有返回值函数调用语句＞][main] = 
M[＜有返回值函数调用语句＞][if] = 
M[＜有返回值函数调用语句＞][else] = 
M[＜有返回值函数调用语句＞][while] = 
M[＜有返回值函数调用语句＞][do] = 
M[＜有返回值函数调用语句＞][for] = 
M[＜有返回值函数调用语句＞][scanf] = 
M[＜有返回值函数调用语句＞][printf] = 
M[＜有返回值函数调用语句＞][return] = 


M[＜无返回值函数调用语句＞][;] = 
M[＜无返回值函数调用语句＞][(] = 
M[＜无返回值函数调用语句＞][)] = 
M[＜无返回值函数调用语句＞][{] = 
M[＜无返回值函数调用语句＞][}] = 
M[＜无返回值函数调用语句＞][+] = 
M[＜无返回值函数调用语句＞][-] = 
M[＜无返回值函数调用语句＞][*] = 
M[＜无返回值函数调用语句＞][/] = 
M[＜无返回值函数调用语句＞][<] = 
M[＜无返回值函数调用语句＞][<=] = 
M[＜无返回值函数调用语句＞][>] = 
M[＜无返回值函数调用语句＞][>=] = 
M[＜无返回值函数调用语句＞][!=] = 
M[＜无返回值函数调用语句＞][==] = 
M[＜无返回值函数调用语句＞][digit] = 
M[＜无返回值函数调用语句＞][character] = 
M[＜无返回值函数调用语句＞][string] = 
M[＜无返回值函数调用语句＞][id] = ＜无返回值函数调用语句＞->＜标识符＞(＜值参数表＞)
M[＜无返回值函数调用语句＞][int] = 
M[＜无返回值函数调用语句＞][char] = 
M[＜无返回值函数调用语句＞][const] = 
M[＜无返回值函数调用语句＞][=] = 
M[＜无返回值函数调用语句＞][,] = 
M[＜无返回值函数调用语句＞][[] = 
M[＜无返回值函数调用语句＞][]] = 
M[＜无返回值函数调用语句＞][void] = 
M[＜无返回值函数调用语句＞][main] = 
M[＜无返回值函数调用语句＞][if] = 
M[＜无返回值函数调用语句＞][else] = 
M[＜无返回值函数调用语句＞][while] = 
M[＜无返回值函数调用语句＞][do] = 
M[＜无返回值函数调用语句＞][for] = 
M[＜无返回值函数调用语句＞][scanf] = 
M[＜无返回值函数调用语句＞][printf] = 
M[＜无返回值函数调用语句＞][return] = 


M[＜赋值语句＞][;] = 
M[＜赋值语句＞][(] = 
M[＜赋值语句＞][)] = 
M[＜赋值语句＞][{] = 
M[＜赋值语句＞][}] = 
M[＜赋值语句＞][+] = 
M[＜赋值语句＞][-] = 
M[＜赋值语句＞][*] = 
M[＜赋值语句＞][/] = 
M[＜赋值语句＞][<] = 
M[＜赋值语句＞][<=] = 
M[＜赋值语句＞][>] = 
M[＜赋值语句＞][>=] = 
M[＜赋值语句＞][!=] = 
M[＜赋值语句＞][==] = 
M[＜赋值语句＞][digit] = 
M[＜赋值语句＞][character] = 
M[＜赋值语句＞][string] = 
M[＜赋值语句＞][id] = ＜赋值语句＞->＜18＞=＜表达式＞
M[＜赋值语句＞][int] = 
M[＜赋值语句＞][char] = 
M[＜赋值语句＞][const] = 
M[＜赋值语句＞][=] = 
M[＜赋值语句＞][,] = 
M[＜赋值语句＞][[] = 
M[＜赋值语句＞][]] = 
M[＜赋值语句＞][void] = 
M[＜赋值语句＞][main] = 
M[＜赋值语句＞][if] = 
M[＜赋值语句＞][else] = 
M[＜赋值语句＞][while] = 
M[＜赋值语句＞][do] = 
M[＜赋值语句＞][for] = 
M[＜赋值语句＞][scanf] = 
M[＜赋值语句＞][printf] = 
M[＜赋值语句＞][return] = 


M[＜读语句＞][;] = 
M[＜读语句＞][(] = 
M[＜读语句＞][)] = 
M[＜读语句＞][{] = 
M[＜读语句＞][}] = 
M[＜读语句＞][+] = 
M[＜读语句＞][-] = 
M[＜读语句＞][*] = 
M[＜读语句＞][/] = 
M[＜读语句＞][<] = 
M[＜读语句＞][<=] = 
M[＜读语句＞][>] = 
M[＜读语句＞][>=] = 
M[＜读语句＞][!=] = 
M[＜读语句＞][==] = 
M[＜读语句＞][digit] = 
M[＜读语句＞][character] = 
M[＜读语句＞][string] = 
M[＜读语句＞][id] = 
M[＜读语句＞][int] = 
M[＜读语句＞][char] = 
M[＜读语句＞][const] = 
M[＜读语句＞][=] = 
M[＜读语句＞][,] = 
M[＜读语句＞][[] = 
M[＜读语句＞][]] = 
M[＜读语句＞][void] = 
M[＜读语句＞][main] = 
M[＜读语句＞][if] = 
M[＜读语句＞][else] = 
M[＜读语句＞][while] = 
M[＜读语句＞][do] = 
M[＜读语句＞][for] = 
M[＜读语句＞][scanf] = ＜读语句＞->scanf(＜标识符＞＜21＞)
M[＜读语句＞][printf] = 
M[＜读语句＞][return] = 


M[＜写语句＞][;] = 
M[＜写语句＞][(] = 
M[＜写语句＞][)] = 
M[＜写语句＞][{] = 
M[＜写语句＞][}] = 
M[＜写语句＞][+] = 
M[＜写语句＞][-] = 
M[＜写语句＞][*] = 
M[＜写语句＞][/] = 
M[＜写语句＞][<] = 
M[＜写语句＞][<=] = 
M[＜写语句＞][>] = 
M[＜写语句＞][>=] = 
M[＜写语句＞][!=] = 
M[＜写语句＞][==] = 
M[＜写语句＞][digit] = 
M[＜写语句＞][character] = 
M[＜写语句＞][string] = 
M[＜写语句＞][id] = 
M[＜写语句＞][int] = 
M[＜写语句＞][char] = 
M[＜写语句＞][const] = 
M[＜写语句＞][=] = 
M[＜写语句＞][,] = 
M[＜写语句＞][[] = 
M[＜写语句＞][]] = 
M[＜写语句＞][void] = 
M[＜写语句＞][main] = 
M[＜写语句＞][if] = 
M[＜写语句＞][else] = 
M[＜写语句＞][while] = 
M[＜写语句＞][do] = 
M[＜写语句＞][for] = 
M[＜写语句＞][scanf] = 
M[＜写语句＞][printf] = ＜写语句＞->printf(＜22＞)
M[＜写语句＞][return] = 


M[＜返回语句＞][;] = 
M[＜返回语句＞][(] = 
M[＜返回语句＞][)] = 
M[＜返回语句＞][{] = 
M[＜返回语句＞][}] = 
M[＜返回语句＞][+] = 
M[＜返回语句＞][-] = 
M[＜返回语句＞][*] = 
M[＜返回语句＞][/] = 
M[＜返回语句＞][<] = 
M[＜返回语句＞][<=] = 
M[＜返回语句＞][>] = 
M[＜返回语句＞][>=] = 
M[＜返回语句＞][!=] = 
M[＜返回语句＞][==] = 
M[＜返回语句＞][digit] = 
M[＜返回语句＞][character] = 
M[＜返回语句＞][string] = 
M[＜返回语句＞][id] = 
M[＜返回语句＞][int] = 
M[＜返回语句＞][char] = 
M[＜返回语句＞][const] = 
M[＜返回语句＞][=] = 
M[＜返回语句＞][,] = 
M[＜返回语句＞][[] = 
M[＜返回语句＞][]] = 
M[＜返回语句＞][void] = 
M[＜返回语句＞][main] = 
M[＜返回语句＞][if] = 
M[＜返回语句＞][else] = 
M[＜返回语句＞][while] = 
M[＜返回语句＞][do] = 
M[＜返回语句＞][for] = 
M[＜返回语句＞][scanf] = 
M[＜返回语句＞][printf] = 
M[＜返回语句＞][return] = ＜返回语句＞->return＜23＞


M[＜18＞][;] = 
M[＜18＞][(] = 
M[＜18＞][)] = 
M[＜18＞][{] = 
M[＜18＞][}] = 
M[＜18＞][+] = 
M[＜18＞][-] = 
M[＜18＞][*] = 
M[＜18＞][/] = 
M[＜18＞][<] = 
M[＜18＞][<=] = 
M[＜18＞][>] = 
M[＜18＞][>=] = 
M[＜18＞][!=] = 
M[＜18＞][==] = 
M[＜18＞][digit] = 
M[＜18＞][character] = 
M[＜18＞][string] = 
M[＜18＞][id] = ＜18＞->＜标识符＞＜30＞
M[＜18＞][int] = 
M[＜18＞][char] = 
M[＜18＞][const] = 
M[＜18＞][=] = 
M[＜18＞][,] = 
M[＜18＞][[] = 
M[＜18＞][]] = 
M[＜18＞][void] = 
M[＜18＞][main] = 
M[＜18＞][if] = 
M[＜18＞][else] = 
M[＜18＞][while] = 
M[＜18＞][do] = 
M[＜18＞][for] = 
M[＜18＞][scanf] = 
M[＜18＞][printf] = 
M[＜18＞][return] = 


M[＜30＞][;] = 
M[＜30＞][(] = 
M[＜30＞][)] = 
M[＜30＞][{] = 
M[＜30＞][}] = 
M[＜30＞][+] = 
M[＜30＞][-] = 
M[＜30＞][*] = 
M[＜30＞][/] = 
M[＜30＞][<] = 
M[＜30＞][<=] = 
M[＜30＞][>] = 
M[＜30＞][>=] = 
M[＜30＞][!=] = 
M[＜30＞][==] = 
M[＜30＞][digit] = 
M[＜30＞][character] = 
M[＜30＞][string] = 
M[＜30＞][id] = 
M[＜30＞][int] = 
M[＜30＞][char] = 
M[＜30＞][const] = 
M[＜30＞][=] = ＜30＞->$
M[＜30＞][,] = 
M[＜30＞][[] = ＜30＞->[＜表达式＞]
M[＜30＞][]] = 
M[＜30＞][void] = 
M[＜30＞][main] = 
M[＜30＞][if] = 
M[＜30＞][else] = 
M[＜30＞][while] = 
M[＜30＞][do] = 
M[＜30＞][for] = 
M[＜30＞][scanf] = 
M[＜30＞][printf] = 
M[＜30＞][return] = 


M[＜条件＞][;] = 
M[＜条件＞][(] = ＜条件＞->＜表达式＞
M[＜条件＞][)] = 
M[＜条件＞][{] = 
M[＜条件＞][}] = 
M[＜条件＞][+] = ＜条件＞->＜表达式＞
M[＜条件＞][-] = ＜条件＞->＜表达式＞
M[＜条件＞][*] = 
M[＜条件＞][/] = 
M[＜条件＞][<] = 
M[＜条件＞][<=] = 
M[＜条件＞][>] = 
M[＜条件＞][>=] = 
M[＜条件＞][!=] = 
M[＜条件＞][==] = 
M[＜条件＞][digit] = ＜条件＞->＜表达式＞
M[＜条件＞][character] = ＜条件＞->＜表达式＞
M[＜条件＞][string] = 
M[＜条件＞][id] = ＜条件＞->＜表达式＞
M[＜条件＞][int] = 
M[＜条件＞][char] = 
M[＜条件＞][const] = 
M[＜条件＞][=] = 
M[＜条件＞][,] = 
M[＜条件＞][[] = 
M[＜条件＞][]] = 
M[＜条件＞][void] = 
M[＜条件＞][main] = 
M[＜条件＞][if] = 
M[＜条件＞][else] = 
M[＜条件＞][while] = 
M[＜条件＞][do] = 
M[＜条件＞][for] = 
M[＜条件＞][scanf] = 
M[＜条件＞][printf] = 
M[＜条件＞][return] = 


M[＜19＞][;] = ＜19＞->$
M[＜19＞][(] = 
M[＜19＞][)] = 
M[＜19＞][{] = ＜19＞->$
M[＜19＞][}] = ＜19＞->$
M[＜19＞][+] = 
M[＜19＞][-] = 
M[＜19＞][*] = 
M[＜19＞][/] = 
M[＜19＞][<] = 
M[＜19＞][<=] = 
M[＜19＞][>] = 
M[＜19＞][>=] = 
M[＜19＞][!=] = 
M[＜19＞][==] = 
M[＜19＞][digit] = 
M[＜19＞][character] = 
M[＜19＞][string] = 
M[＜19＞][id] = ＜19＞->$
M[＜19＞][int] = 
M[＜19＞][char] = 
M[＜19＞][const] = 
M[＜19＞][=] = 
M[＜19＞][,] = 
M[＜19＞][[] = 
M[＜19＞][]] = 
M[＜19＞][void] = 
M[＜19＞][main] = 
M[＜19＞][if] = ＜19＞->$
M[＜19＞][else] = ＜19＞->$
M[＜19＞][while] = ＜19＞->$
M[＜19＞][do] = ＜19＞->$
M[＜19＞][for] = ＜19＞->$
M[＜19＞][scanf] = ＜19＞->$
M[＜19＞][printf] = ＜19＞->$
M[＜19＞][return] = ＜19＞->$


M[＜步长＞][;] = 
M[＜步长＞][(] = 
M[＜步长＞][)] = 
M[＜步长＞][{] = 
M[＜步长＞][}] = 
M[＜步长＞][+] = 
M[＜步长＞][-] = 
M[＜步长＞][*] = 
M[＜步长＞][/] = 
M[＜步长＞][<] = 
M[＜步长＞][<=] = 
M[＜步长＞][>] = 
M[＜步长＞][>=] = 
M[＜步长＞][!=] = 
M[＜步长＞][==] = 
M[＜步长＞][digit] = ＜步长＞->＜无符号整数＞
M[＜步长＞][character] = 
M[＜步长＞][string] = 
M[＜步长＞][id] = 
M[＜步长＞][int] = 
M[＜步长＞][char] = 
M[＜步长＞][const] = 
M[＜步长＞][=] = 
M[＜步长＞][,] = 
M[＜步长＞][[] = 
M[＜步长＞][]] = 
M[＜步长＞][void] = 
M[＜步长＞][main] = 
M[＜步长＞][if] = 
M[＜步长＞][else] = 
M[＜步长＞][while] = 
M[＜步长＞][do] = 
M[＜步长＞][for] = 
M[＜步长＞][scanf] = 
M[＜步长＞][printf] = 
M[＜步长＞][return] = 


M[＜34＞][;] = 
M[＜34＞][(] = 
M[＜34＞][)] = ＜34＞->$
M[＜34＞][{] = 
M[＜34＞][}] = 
M[＜34＞][+] = 
M[＜34＞][-] = 
M[＜34＞][*] = 
M[＜34＞][/] = 
M[＜34＞][<] = 
M[＜34＞][<=] = 
M[＜34＞][>] = 
M[＜34＞][>=] = 
M[＜34＞][!=] = 
M[＜34＞][==] = 
M[＜34＞][digit] = 
M[＜34＞][character] = 
M[＜34＞][string] = 
M[＜34＞][id] = 
M[＜34＞][int] = 
M[＜34＞][char] = 
M[＜34＞][const] = 
M[＜34＞][=] = 
M[＜34＞][,] = ＜34＞->,＜表达式＞＜34＞
M[＜34＞][[] = 
M[＜34＞][]] = 
M[＜34＞][void] = 
M[＜34＞][main] = 
M[＜34＞][if] = 
M[＜34＞][else] = 
M[＜34＞][while] = 
M[＜34＞][do] = 
M[＜34＞][for] = 
M[＜34＞][scanf] = 
M[＜34＞][printf] = 
M[＜34＞][return] = 


M[＜20＞][;] = ＜20＞->＜语句＞＜20＞
M[＜20＞][(] = 
M[＜20＞][)] = 
M[＜20＞][{] = ＜20＞->＜语句＞＜20＞
M[＜20＞][}] = ＜20＞->$
M[＜20＞][+] = 
M[＜20＞][-] = 
M[＜20＞][*] = 
M[＜20＞][/] = 
M[＜20＞][<] = 
M[＜20＞][<=] = 
M[＜20＞][>] = 
M[＜20＞][>=] = 
M[＜20＞][!=] = 
M[＜20＞][==] = 
M[＜20＞][digit] = 
M[＜20＞][character] = 
M[＜20＞][string] = 
M[＜20＞][id] = ＜20＞->＜语句＞＜20＞
M[＜20＞][int] = 
M[＜20＞][char] = 
M[＜20＞][const] = 
M[＜20＞][=] = 
M[＜20＞][,] = 
M[＜20＞][[] = 
M[＜20＞][]] = 
M[＜20＞][void] = 
M[＜20＞][main] = 
M[＜20＞][if] = ＜20＞->＜语句＞＜20＞
M[＜20＞][else] = 
M[＜20＞][while] = ＜20＞->＜语句＞＜20＞
M[＜20＞][do] = ＜20＞->＜语句＞＜20＞
M[＜20＞][for] = ＜20＞->＜语句＞＜20＞
M[＜20＞][scanf] = ＜20＞->＜语句＞＜20＞
M[＜20＞][printf] = ＜20＞->＜语句＞＜20＞
M[＜20＞][return] = ＜20＞->＜语句＞＜20＞


M[＜21＞][;] = 
M[＜21＞][(] = 
M[＜21＞][)] = ＜21＞->$
M[＜21＞][{] = 
M[＜21＞][}] = 
M[＜21＞][+] = 
M[＜21＞][-] = 
M[＜21＞][*] = 
M[＜21＞][/] = 
M[＜21＞][<] = 
M[＜21＞][<=] = 
M[＜21＞][>] = 
M[＜21＞][>=] = 
M[＜21＞][!=] = 
M[＜21＞][==] = 
M[＜21＞][digit] = 
M[＜21＞][character] = 
M[＜21＞][string] = 
M[＜21＞][id] = 
M[＜21＞][int] = 
M[＜21＞][char] = 
M[＜21＞][const] = 
M[＜21＞][=] = 
M[＜21＞][,] = ＜21＞->,＜标识符＞＜21＞
M[＜21＞][[] = 
M[＜21＞][]] = 
M[＜21＞][void] = 
M[＜21＞][main] = 
M[＜21＞][if] = 
M[＜21＞][else] = 
M[＜21＞][while] = 
M[＜21＞][do] = 
M[＜21＞][for] = 
M[＜21＞][scanf] = 
M[＜21＞][printf] = 
M[＜21＞][return] = 


M[＜22＞][;] = 
M[＜22＞][(] = ＜22＞->＜表达式＞
M[＜22＞][)] = 
M[＜22＞][{] = 
M[＜22＞][}] = 
M[＜22＞][+] = ＜22＞->＜表达式＞
M[＜22＞][-] = ＜22＞->＜表达式＞
M[＜22＞][*] = 
M[＜22＞][/] = 
M[＜22＞][<] = 
M[＜22＞][<=] = 
M[＜22＞][>] = 
M[＜22＞][>=] = 
M[＜22＞][!=] = 
M[＜22＞][==] = 
M[＜22＞][digit] = ＜22＞->＜表达式＞
M[＜22＞][character] = ＜22＞->＜表达式＞
M[＜22＞][string] = ＜22＞->＜字符串＞＜33＞
M[＜22＞][id] = ＜22＞->＜表达式＞
M[＜22＞][int] = 
M[＜22＞][char] = 
M[＜22＞][const] = 
M[＜22＞][=] = 
M[＜22＞][,] = 
M[＜22＞][[] = 
M[＜22＞][]] = 
M[＜22＞][void] = 
M[＜22＞][main] = 
M[＜22＞][if] = 
M[＜22＞][else] = 
M[＜22＞][while] = 
M[＜22＞][do] = 
M[＜22＞][for] = 
M[＜22＞][scanf] = 
M[＜22＞][printf] = 
M[＜22＞][return] = 


M[＜33＞][;] = 
M[＜33＞][(] = 
M[＜33＞][)] = ＜33＞->$
M[＜33＞][{] = 
M[＜33＞][}] = 
M[＜33＞][+] = 
M[＜33＞][-] = 
M[＜33＞][*] = 
M[＜33＞][/] = 
M[＜33＞][<] = 
M[＜33＞][<=] = 
M[＜33＞][>] = 
M[＜33＞][>=] = 
M[＜33＞][!=] = 
M[＜33＞][==] = 
M[＜33＞][digit] = 
M[＜33＞][character] = 
M[＜33＞][string] = 
M[＜33＞][id] = 
M[＜33＞][int] = 
M[＜33＞][char] = 
M[＜33＞][const] = 
M[＜33＞][=] = 
M[＜33＞][,] = ＜33＞->,＜表达式＞
M[＜33＞][[] = 
M[＜33＞][]] = 
M[＜33＞][void] = 
M[＜33＞][main] = 
M[＜33＞][if] = 
M[＜33＞][else] = 
M[＜33＞][while] = 
M[＜33＞][do] = 
M[＜33＞][for] = 
M[＜33＞][scanf] = 
M[＜33＞][printf] = 
M[＜33＞][return] = 


M[＜23＞][;] = ＜23＞->$
M[＜23＞][(] = ＜23＞->(＜表达式＞)＜23＞
M[＜23＞][)] = 
M[＜23＞][{] = 
M[＜23＞][}] = 
M[＜23＞][+] = 
M[＜23＞][-] = 
M[＜23＞][*] = 
M[＜23＞][/] = 
M[＜23＞][<] = 
M[＜23＞][<=] = 
M[＜23＞][>] = 
M[＜23＞][>=] = 
M[＜23＞][!=] = 
M[＜23＞][==] = 
M[＜23＞][digit] = 
M[＜23＞][character] = 
M[＜23＞][string] = 
M[＜23＞][id] = 
M[＜23＞][int] = 
M[＜23＞][char] = 
M[＜23＞][const] = 
M[＜23＞][=] = 
M[＜23＞][,] = 
M[＜23＞][[] = 
M[＜23＞][]] = 
M[＜23＞][void] = 
M[＜23＞][main] = 
M[＜23＞][if] = 
M[＜23＞][else] = 
M[＜23＞][while] = 
M[＜23＞][do] = 
M[＜23＞][for] = 
M[＜23＞][scanf] = 
M[＜23＞][printf] = 
M[＜23＞][return] = 


